package com.fengmangbilu.util;

import java.util.regex.Pattern;

public class RegexUtils {

	// 正则：验证手机
	public static final String REGEX_MOBILE = "^((13[0-9])|(15[^4,\\D])|(17[0-9])|(18[0-9]))\\d{8}$";

	// 正则：验证固定电话 
	public static final String REGEX_PHONE = "^[\\d-]{5,17}$";
	
	//正则：验证邮箱(email)地址
	public static final String REGEX_EMAIL = "^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$";
	
	//正则：验证ip地址
	public static final String REGEX_IP = "((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)";
	
	//正则：验证社会信用代码
	public static final String REGEX_CREDIT_CODE = "[^_IOZSVa-z\\W]{2}\\d{6}[^_IOZSVa-z\\W]{10}";
	
	//正则：验证营业执照
	public static final String REGEX_BUSINESS_LICENSE = "^(?:(?![IOZSV])[\\dA-Z]){2}\\d{6}(?:(?![IOZSV])[\\dA-Z]){10}$";
	
	//正则：验证汉字
	public static final String REGEX_HZ = "^[\\u4e00-\\u9fa5]+$";
	
	//正则：验证URL地址
	public static final String REGEX_URL = "(https?://(w{3}\\.)?)?\\w+\\.\\w+(\\.[a-zA-Z]+)*(:\\d{1,5})?(/\\w*)*(\\??(.+=.*)?(&.+=.*)?)?";
	
	//正则：验证QQ号
	public static final String REGEX_QQ = "[1-9][0-9]{4,}";
	
	//正则：验证日期格式
	public static final String REGEX_DATE = "^((\\d{2}(([02468][048])|([13579][26]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])))))|(\\d{2}(([02468][1235679])|([13579][01345789]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))";
	
	//正则：验证空白行
	public static final String REGEX_BLANK_LINE = "\\n\\s*\\r";
	
	//正则：验证邮政编码
	public static final String REGEX_ZIP_CODE = "[1-9]\\d{5}(?!\\d)";
	
	//正则：验证完整域名
	public static final String REGEX_DOMAIN_NAME = "[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\\.?";
	
	//正则：验证组织机构代码
	public static final String REGEX_JIGOU_CODE = "[a-zA-Z0-9]{8}-[a-zA-Z0-9]";
	
	//正则：验证图象
	public static final String REGEX_IMAGE = ".+(.JPEG|.jpeg|.JPG|.jpg|.GIF|.gif|.BMP|.bmp|.PNG|.png)$";
	
	/**
	 * 验证手机号
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isMobile(CharSequence input) {
		return isMatch(REGEX_MOBILE, input);
	}
	
	/**
	 * 验证固定电话
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isPhone(CharSequence input) {
		return isMatch(REGEX_PHONE, input);
	}
	
	/**
	 * 验证邮箱（email）地址
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isEmail(CharSequence input) {
		return isMatch(REGEX_EMAIL, input);
	}
	
	/**
	 * 验证IP地址
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isIP(CharSequence input) {
		return isMatch(REGEX_IP, input);
	}
	
	/**
	 * 验证统一社会信用代码
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isCreditCode(CharSequence input) {
		return isMatch(REGEX_CREDIT_CODE, input);
	}
	
	/**
	 * 验证营业执照
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isBusinessLicense(CharSequence input) {
		return isMatch(REGEX_BUSINESS_LICENSE, input);
	}
	
	/**
	 * 验证汉字
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isHZ(CharSequence input) {
		return isMatch(REGEX_HZ, input);
	}
	
	/**
	 * 验证URL
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isURL(CharSequence input) {
		return isMatch(REGEX_URL, input);
	}
	
	/**
	 * 验证QQ号
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isQQ(CharSequence input) {
		return isMatch(REGEX_QQ, input);
	}
	
	/**
	 * 验证日期格式
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isDate(CharSequence input) {
		return isMatch(REGEX_DATE, input);
	}
	
	/**
	 * 验证空白行
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isBlankLine(CharSequence input) {
		return isMatch(REGEX_BLANK_LINE, input);
	}
	
	/**
	 * 验证邮政编码
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isZipCode(CharSequence input) {
		return isMatch(REGEX_ZIP_CODE, input);
	}
	
	/**
	 * 验证域名
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isDomainName(CharSequence input) {
		return isMatch(REGEX_DOMAIN_NAME, input);
	}
	
	/**
	 * 验证机构代码
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isJigouCode(CharSequence input) {
		return isMatch(REGEX_JIGOU_CODE, input);
	}
	
	/**
	 * 验证图像
	 * @param input 待验证文本
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
	 */
	public static boolean isImage(CharSequence input) {
		return isMatch(REGEX_IMAGE, input);
	}

	/**
     * 判断是否匹配正则
     * @param regex 正则表达式
     * @param input 要匹配的字符串
     * @return {@code true}: 匹配<br>{@code false}: 不匹配
     */
	public static boolean isMatch(String regex, CharSequence input) {
		return input != null && input.length() > 0 && Pattern.matches(regex, input);
	}
	
	
	public static void main(String[] args) {
		System.out.println(RegexUtils.isDomainName("www.google.com"));
	}
}
