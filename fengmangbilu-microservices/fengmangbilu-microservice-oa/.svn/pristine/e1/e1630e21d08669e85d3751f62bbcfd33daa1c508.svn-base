package com.fengmangbilu.microservice.oa.controllers;

import java.util.UUID;

import javax.validation.Valid;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fengmangbilu.microservice.oa.clients.UserClient;
import com.fengmangbilu.microservice.oa.endpoints.CertifiedCompanyRequest;
import com.fengmangbilu.microservice.oa.endpoints.CertifiedIdentityRequest;
import com.fengmangbilu.microservice.oa.endpoints.CreditReportRequest;
import com.fengmangbilu.microservice.oa.entities.CompanyAuth;
import com.fengmangbilu.microservice.oa.entities.IdCardInfo;
import com.fengmangbilu.microservice.oa.providers.DefaultCreditClient;
import com.fengmangbilu.microservice.oa.providers.DefaultCreditProfile;
import com.fengmangbilu.microservice.oa.providers.ICreditClient;
import com.fengmangbilu.microservice.oa.providers.ICreditProfile;
import com.fengmangbilu.microservice.oa.providers.support.CisReport;
import com.fengmangbilu.microservice.oa.providers.support.PoliceCheckInfo;
import com.fengmangbilu.microservice.oa.services.CompanyAuthService;
import com.fengmangbilu.microservice.oa.services.IdCardInfoService;
import com.fengmangbilu.microservice.oa.services.QiniuService;
import com.fengmangbilu.util.IdCardUtils;
import com.fengmangbilu.web.Response;

import io.swagger.annotations.Api;

@Api
@Validated
@RestController
@RequestMapping("auth")
public class AuthController {

	@Autowired
	private UserClient userClient;

	@Autowired
	private QiniuService qiniuService;

	@Autowired
	private CompanyAuthService companyAuthService;

	@Autowired
	private IdCardInfoService idCardInfoService;

	@PostMapping("certifiedIdentity")
	public Response certifiedIdentity(@RequestHeader(name = "Authorization") String token, @AuthenticationPrincipal String userId,
			@Valid @RequestBody CertifiedIdentityRequest request) throws Exception {
		CreditReportRequest creditReportRequest = new CreditReportRequest();
		BeanUtils.copyProperties(request, creditReportRequest);
		ICreditProfile profile = DefaultCreditProfile.getProfile(creditReportRequest);
		ICreditClient client = new DefaultCreditClient(profile);
		CisReport report = client.getPerson().getCisReport();
		PoliceCheckInfo policeInfo = report.getPoliceCheckInfo();
		if (policeInfo != null) {
			IdCardInfo idCardInfo = new IdCardInfo();
			BeanUtils.copyProperties(request, idCardInfo);
			String idCard = request.getIdCard();
			idCardInfo.setBirthday(IdCardUtils.getBirthByIdCard(idCard));
			idCardInfo.setGender(IdCardUtils.getGenderByIdCard(idCard).toString());
			idCardInfoService.save(idCardInfo);
			Response response = userClient.setIsCertifiedForTrue(token);
			if (response.getCode() == 200) {
				return Response.ok("个人实名认证成功");
			}
		}
		return Response.error("个人实名认证失败，请稍后重试");
	}

	@PostMapping("certifiedCompany")
	public Response certifiedCompany(@Valid @RequestBody CertifiedCompanyRequest request) throws Exception {
		CompanyAuth companyAuth = new CompanyAuth();
		BeanUtils.copyProperties(request, companyAuth);
		companyAuthService.save(companyAuth);
		return Response.ok("提交申请成功！我们会尽快对你的申请进行审核，1-3个工作日后，将审核结果以短信形式发送给你。");
	}
	
	@PostMapping("uploadBusinessLicense")
	public Response uploadBusinessLicense(@RequestParam("file") MultipartFile file) throws Exception {
		String fileName = UUID.randomUUID().toString().replaceAll("\\-", "");
		String businessLicense = qiniuService.uploadTempFile(file, fileName);
		return Response.ok(businessLicense);
	}

	@PostMapping("auditCompany/{id}")
	public Response AuditCompany(@AuthenticationPrincipal String userId, @PathVariable("id") CompanyAuth companyAuth)
			throws Exception {
		if (companyAuth == null) {
			return Response.error("企业申请认证记录不存在");
		}
		
		
		return Response.ok("提交申请成功！我们会尽快对你的申请进行审核，1-3个工作日后，将审核结果以短信形式发送给你。");
	}
}
