package com.fengmangbilu.microservice.oa.exceptions;

public class ReportException extends RuntimeException {

	private static final long serialVersionUID = 9181535536991096192L;

	public static final int DEFAULT_CODE = 13099;

	public static ReportException ARGUMENT_NOT_VALID = new ReportException(13011, "请求参数错误");
	public static ReportException SERVICE = new ReportException(13012, "请求服务异常");
	public static ReportException CONDITION = new ReportException(13013, "请求参数转换异常");
	public static ReportException CONNECT = new ReportException(13014, "请求连接超时");
	public static ReportException RESULT = new ReportException(13015, "请求结果转换异常");
	public static ReportException UNZIP = new ReportException(13016, "请求结果解压异常");
	public static ReportException IDCARD_DIFFER = new ReportException(13017, "公民身份号码一致,姓名不一致");
	public static ReportException IDCARD_UNFOUND = new ReportException(13018, "库中无此号,请到户籍所在地进行核实");
	public static ReportException ENCRYPT = new ReportException(13019, "接口加密异常");
	public static ReportException SIGN = new ReportException(13020, "接口签名异常");
	public static ReportException API = new ReportException(13021, "接口访问异常");
	public static ReportException OTHER = new ReportException(DEFAULT_CODE, "未定义异常");

	private int code;

	public ReportException(int code) {
		super();
		this.code = code;
	}

	public ReportException(int code, String message) {
		super(message);
		this.code = code;
	}

	public ReportException(String message) {
		super(message);
		this.code = DEFAULT_CODE;
	}

	public int getCode() {
		return code;
	}

	public static ReportException create(int code) {
		if (code == 13011) {
			return ReportException.ARGUMENT_NOT_VALID;
		} else if (code == 13012) {
			return ReportException.SERVICE;
		} else if (code == 13013) {
			return ReportException.CONDITION;
		} else if (code == 13014) {
			return ReportException.CONNECT;
		} else if (code == 13015) {
			return ReportException.RESULT;
		} else if (code == 13016) {
			return ReportException.UNZIP;
		} else if (code == 13017) {
			return ReportException.IDCARD_DIFFER;
		} else if (code == 13018) {
			return ReportException.IDCARD_UNFOUND;
		} else if (code == 13019) {
			return ReportException.ENCRYPT;
		} else if (code == 13020) {
			return ReportException.SIGN;
		} else if (code == 13021) {
			return ReportException.API;
		} else if (code == 13099) {
			return ReportException.OTHER;
		}
		return new ReportException(code);
	}

}
