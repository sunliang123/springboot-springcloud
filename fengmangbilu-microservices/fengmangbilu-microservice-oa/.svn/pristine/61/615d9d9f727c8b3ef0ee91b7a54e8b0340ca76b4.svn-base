package com.fengmangbilu.microservice.oa.controllers;

import java.util.UUID;

import javax.validation.Valid;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fengmangbilu.microservice.oa.endpoints.CompanyAuthRequest;
import com.fengmangbilu.microservice.oa.endpoints.CompanyRequest;
import com.fengmangbilu.microservice.oa.entities.CompanyAuth;
import com.fengmangbilu.microservice.oa.enums.AuthStatus;
import com.fengmangbilu.microservice.oa.services.CompanyAuthService;
import com.fengmangbilu.microservice.oa.services.QiniuService;
import com.fengmangbilu.web.Response;

import io.swagger.annotations.Api;

@Api
@Validated
@RestController
@RequestMapping("company")
public class CompanyController {

	@Autowired
	private QiniuService qiniuService;

	@Autowired
	private CompanyAuthService companyAuthService;

	@PostMapping("sumbit")
	public Response sumbit(@Valid @RequestBody CompanyRequest request) throws Exception {
		CompanyAuth companyAuth = new CompanyAuth();
		BeanUtils.copyProperties(request, companyAuth);
		companyAuthService.save(companyAuth);
		return Response.ok("提交申请成功！我们会尽快对你的申请进行审核，1-3个工作日后，将审核结果以短信形式发送给你。");
	}

	@PostMapping("uploadBusinessLicense")
	public Response uploadBusinessLicense(@RequestParam("file") MultipartFile file) throws Exception {
		String fileName = UUID.randomUUID().toString().replaceAll("\\-", "");
		String businessLicense = qiniuService.uploadTempFile(file, fileName);
		return Response.ok(businessLicense);
	}

	@PostMapping("audit")
	public Response audit(@AuthenticationPrincipal String userId, @Valid @RequestBody CompanyAuthRequest request)
			throws Exception {
		CompanyAuth companyAuth = companyAuthService.findOne(request.getId());
		if (companyAuth == null) {
			return Response.error("企业申请认证记录不存在");
		}
		companyAuth.setStatus(request.getStatus());
		companyAuth.setFailureReason(request.getFailureReason());
		companyAuth = companyAuthService.save(companyAuth);
		if (companyAuth.getStatus().equals(AuthStatus.FAILURE)) {
			return Response.ok("审核完成[不通过]");
		}
		if (companyAuth.getStatus().equals(AuthStatus.SUCCESS)) {
			return Response.ok("审核完成[通过]");
		}
		return Response.error("审核失败[未定义结果]");
	}
}
