2018-04-02 00:00:03.324 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:05:03.391 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:10:03.396 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:15:03.401 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:20:03.406 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:25:03.411 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:30:03.417 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:35:03.422 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:40:03.427 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:45:03.432 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:50:03.437 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 00:55:03.442 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:00:03.448 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:05:03.466 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:10:03.484 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:15:03.502 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:20:03.520 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:25:03.538 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:30:03.556 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:35:03.574 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:40:03.592 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:45:03.610 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:50:03.628 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 01:55:03.646 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:00:03.664 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:05:03.689 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:10:03.707 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:15:03.725 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:20:03.743 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:25:03.761 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:30:03.750 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:35:03.738 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:40:03.726 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:45:03.714 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:50:03.702 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 02:55:03.690 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:00:03.678 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:05:03.666 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:10:03.654 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:15:03.642 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:20:03.630 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:25:03.618 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:30:03.606 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:35:03.594 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:40:03.582 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:45:03.570 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:50:03.558 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 03:55:03.546 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:00:03.534 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:05:03.522 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:10:03.510 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:15:03.498 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:20:03.486 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:25:03.474 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:30:03.462 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:35:03.450 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:40:03.438 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:45:03.426 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:50:03.414 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 04:55:03.402 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:00:03.390 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:05:03.378 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:10:03.366 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:15:03.354 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:20:03.342 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:25:03.330 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:30:03.318 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:35:03.306 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:40:03.294 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:45:03.282 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:50:03.270 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 05:55:03.258 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:00:03.246 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:05:03.234 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:10:03.222 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:15:03.210 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:20:03.198 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:25:03.186 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:30:03.174 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:35:03.162 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:40:03.150 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:45:03.138 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:50:03.126 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 06:55:03.114 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:00:03.102 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:05:03.090 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:10:03.078 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:15:03.072 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:20:03.060 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:25:03.048 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:30:03.036 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:35:03.025 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:40:03.013 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:45:03.001 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:50:02.989 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 07:55:02.977 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:00:02.965 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:05:02.953 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:10:02.941 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:15:02.929 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:20:02.917 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:25:02.905 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:30:02.893 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:35:02.881 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:40:02.869 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:45:02.857 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:50:02.844 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 08:55:02.832 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:00:03.821 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:05:03.826 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:10:03.831 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:15:03.836 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:20:03.842 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:25:03.847 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:30:03.852 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:35:03.857 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:40:03.873 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:45:03.878 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:50:03.884 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 09:55:03.889 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:00:03.894 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:05:03.899 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:10:03.904 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:15:03.909 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:20:03.915 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:25:03.920 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:30:03.925 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:35:03.930 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:40:03.935 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:45:03.940 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:50:03.945 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 10:55:03.951 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:00:03.956 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:05:03.961 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:10:03.966 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:15:03.971 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:20:03.976 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:25:03.991 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:30:03.999 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:34:00.504 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973: startup date [Mon Apr 02 11:34:00 CST 2018]; root of context hierarchy
2018-04-02 11:34:00.787 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2018-04-02 11:34:00.812 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 11:34:00.867 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$92e1e6a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:01.145 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 11:34:01.264 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 11:34:01.275 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 11:34:01.624 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 11:34:01.740 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1023150a: startup date [Mon Apr 02 11:34:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 11:34:03.949 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 11:34:04.465 [main] INFO  org.springframework.integration.config.IntegrationRegistrar - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2018-04-02 11:34:04.608 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 11:34:04.657 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointDetailRepository.
2018-04-02 11:34:04.658 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserRepository.
2018-04-02 11:34:04.658 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.RoleRepository.
2018-04-02 11:34:04.660 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointRepository.
2018-04-02 11:34:05.313 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=05455b9c-2899-3ae2-99d6-b41c6fae0260
2018-04-02 11:34:05.364 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2018-04-02 11:34:05.367 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2018-04-02 11:34:05.386 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 11:34:05.433 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.fengmangbilu.microservice.user.clients.OaClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:05.506 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$3d33a1d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:05.725 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76c7e3a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.057 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$599f66ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.074 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.089 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f75abe3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.113 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.116 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@72e36677' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.127 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$344a4e95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.157 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.174 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$bfda19c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.210 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$b44dde6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.233 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 11:34:06.243 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 11:34:06.243 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 11:34:06.256 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$$EnhancerBySpringCGLIB$$77043b9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.270 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.290 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.310 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.317 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration$$EnhancerBySpringCGLIB$$64df7ac5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.337 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration$$EnhancerBySpringCGLIB$$bc6a6936] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.362 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.376 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$ac20ab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.468 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.514 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.574 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.587 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.636 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a8f489ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.788 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.797 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.904 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$92e1e6a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.937 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration' of type [org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration$$EnhancerBySpringCGLIB$$388f81ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:06.957 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties' of type [org.springframework.cloud.stream.config.SpringIntegrationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 11:34:07.766 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8001 (http)
2018-04-02 11:34:07.793 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-04-02 11:34:07.795 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-04-02 11:34:07.994 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-04-02 11:34:07.994 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6254 ms
2018-04-02 11:34:08.708 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
2018-04-02 11:34:08.709 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-02 11:34:08.709 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-02 11:34:08.709 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-02 11:34:08.709 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2018-04-02 11:34:08.711 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-02 11:34:08.712 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-02 11:34:08.712 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-02 11:34:08.712 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-02 11:34:08.712 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2018-04-02 11:34:08.714 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-02 11:34:08.831 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure - Init DruidDataSource
2018-04-02 11:34:10.526 [main] INFO  p6spy - |21|statement|connection0|SELECT 1 FROM DUAL
2018-04-02 11:34:10.633 [main] INFO  p6spy - |8|statement|connection1|SELECT 1 FROM DUAL
2018-04-02 11:34:10.717 [main] INFO  p6spy - |5|statement|connection2|SELECT 1 FROM DUAL
2018-04-02 11:34:10.828 [main] INFO  p6spy - |9|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 11:34:10.944 [main] INFO  p6spy - |8|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 11:34:10.968 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-04-02 11:34:11.532 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-02 11:34:11.554 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-04-02 11:34:11.707 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.0.12.Final}
2018-04-02 11:34:11.709 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2018-04-02 11:34:11.711 [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2018-04-02 11:34:11.808 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-02 11:34:12.177 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-02 11:34:13.325 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2018-04-02 11:34:15.389 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-02 11:34:16.635 [main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
2018-04-02 11:34:17.513 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@48531d5: startup date [Mon Apr 02 11:34:17 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1023150a
2018-04-02 11:34:17.541 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 11:34:18.007 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 11:34:18.017 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 11:34:18.018 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 11:34:18.083 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 11:34:18.093 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 11:34:18.093 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 11:34:19.153 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.ErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-02 11:34:19.155 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/point/getUserPointDetails],methods=[GET]}" onto public org.springframework.data.jpa.datatables.mapping.DataTablesOutput<com.fengmangbilu.microservice.user.entities.UserPointDetail> com.fengmangbilu.microservice.user.controllers.PointController.getUserPointDetails(java.lang.String,java.util.Date,java.util.Date,org.springframework.data.jpa.datatables.mapping.DataTablesInput)
2018-04-02 11:34:19.156 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_resetPassword_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendResetPasswordSms(java.lang.String)
2018-04-02 11:34:19.156 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_login_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendLoginSms(java.lang.String)
2018-04-02 11:34:19.156 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_register_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendRegisterSms(java.lang.String)
2018-04-02 11:34:19.157 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.getToken(com.fengmangbilu.microservice.user.endpoints.TokenRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 11:34:19.157 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/smsLogin],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.smsLogin(com.fengmangbilu.microservice.user.endpoints.LoginRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 11:34:19.157 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/refreshToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.refreshToken(java.lang.String)
2018-04-02 11:34:19.159 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/register],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.register(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 11:34:19.159 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserInfo],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserInfo(java.lang.String)
2018-04-02 11:34:19.159 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/deleteAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.deleteAvatar(java.lang.String) throws com.qiniu.common.QiniuException
2018-04-02 11:34:19.160 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resetPassword],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.resetPassword(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 11:34:19.160 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/uploadAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.uploadAvatar(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.qiniu.common.QiniuException
2018-04-02 11:34:19.160 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/updateAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.updateAvatar(java.lang.String,java.lang.String)
2018-04-02 11:34:19.161 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUpToken],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUpToken(java.lang.String)
2018-04-02 11:34:19.161 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/certifiedIdCard],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.certifiedIdCard(java.lang.String,java.lang.String,com.fengmangbilu.microservice.user.endpoints.IdCardRequest) throws java.lang.Exception
2018-04-02 11:34:19.161 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/findByMobile],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.findByMobile(java.lang.String)
2018-04-02 11:34:19.161 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserHrRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserHrRole(java.lang.String)
2018-04-02 11:34:19.161 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserEmpRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserEmpRole(java.lang.String)
2018-04-02 11:34:19.164 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-02 11:34:19.165 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-02 11:34:19.166 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-02 11:34:19.331 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 11:34:19.341 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1bff70a6
2018-04-02 11:34:21.413 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/refresh || /actuator/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-02 11:34:21.414 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/features || /actuator/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.414 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-02 11:34:21.414 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-02 11:34:21.415 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/auditevents || /actuator/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-02 11:34:21.416 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/trace || /actuator/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.417 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/archaius || /actuator/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.418 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/health || /actuator/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-02 11:34:21.418 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/beans || /actuator/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.419 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-02 11:34:21.419 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics || /actuator/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.419 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/mappings || /actuator/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.420 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/autoconfig || /actuator/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.421 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-02 11:34:21.422 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/heapdump || /actuator/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-02 11:34:21.423 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/info || /actuator/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.423 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/dump || /actuator/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.424 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-02 11:34:21.424 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env || /actuator/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.425 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/configprops || /actuator/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.425 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/channels || /actuator/channels.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.426 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 11:34:21.426 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-02 11:34:21.428 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-02 11:34:21.429 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 11:34:21.429 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers || /actuator/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 11:34:21.843 [main] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-04-02 11:34:22.216 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 11:34:22.304 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 11:34:22.312 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 11:34:22.312 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 11:34:22.520 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1023150a: startup date [Mon Apr 02 11:34:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 11:34:22.529 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Detected ResponseBodyAdvice bean in jsonFilterResponseBodyAdvice
2018-04-02 11:34:22.732 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 11:34:22.733 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 11:34:22.813 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in errorController
2018-04-02 11:34:22.813 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected ResponseBodyAdvice implementation in jsonFilterResponseBodyAdvice
2018-04-02 11:34:22.813 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in defaultExceptionHandler
2018-04-02 11:34:22.912 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 11:34:23.545 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/resetPassword'], Ant [pattern='/register'], Ant [pattern='/smsLogin'], Ant [pattern='/getToken'], Ant [pattern='/refreshToken'], Ant [pattern='/send_**_sms'], Ant [pattern='/findByMobile'], Ant [pattern='/error']]], []
2018-04-02 11:34:23.546 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 11:34:23.546 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs/**'], []
2018-04-02 11:34:23.546 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2018-04-02 11:34:23.546 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2018-04-02 11:34:23.546 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2018-04-02 11:34:23.546 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 11:34:23.547 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/druid/**'], []
2018-04-02 11:34:23.547 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/resetPassword'], []
2018-04-02 11:34:23.547 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/register'], []
2018-04-02 11:34:23.547 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/smsLogin'], []
2018-04-02 11:34:23.547 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/getToken'], []
2018-04-02 11:34:23.547 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/refreshToken'], []
2018-04-02 11:34:23.548 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/send_**_sms'], []
2018-04-02 11:34:23.548 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/findByMobile'], []
2018-04-02 11:34:23.698 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@207b440f, org.springframework.security.web.context.SecurityContextPersistenceFilter@30f1a181, org.springframework.security.web.header.HeaderWriterFilter@2eef2fd6, org.springframework.security.web.authentication.logout.LogoutFilter@7b83476f, com.fengmangbilu.security.authentication.TokenAuthenticationProcessingFilter@d95150c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ad27a73, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39d06cd9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72f18fbd, org.springframework.security.web.session.SessionManagementFilter@13e4a4a0, org.springframework.security.web.access.ExceptionTranslationFilter@77d50cde, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a5f05f5]
2018-04-02 11:34:23.704 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@196ca821, org.springframework.security.web.context.SecurityContextPersistenceFilter@2dadadd9, org.springframework.security.web.header.HeaderWriterFilter@5008c5a, org.springframework.security.web.authentication.logout.LogoutFilter@1cbe3497, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d43bedb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ca08575, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@373636f3, org.springframework.security.web.session.SessionManagementFilter@5ffdea7c, org.springframework.security.web.access.ExceptionTranslationFilter@64ec804f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@296c6cc1]
2018-04-02 11:34:23.732 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@52999774, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@211e1b51, org.springframework.security.web.context.SecurityContextPersistenceFilter@1cce2194, org.springframework.security.web.header.HeaderWriterFilter@3074d565, org.springframework.security.web.csrf.CsrfFilter@5381acc6, org.springframework.security.web.authentication.logout.LogoutFilter@3f36d387, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51645204, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@472d7ab0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d4a1d38, org.springframework.security.web.session.SessionManagementFilter@42775280, org.springframework.security.web.access.ExceptionTranslationFilter@16db679e]
2018-04-02 11:34:24.381 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService  'taskScheduler'
2018-04-02 11:34:25.372 [main] INFO  org.springframework.integration.codec.kryo.CompositeKryoRegistrar - configured Kryo registration [40, java.io.File] with serializer org.springframework.integration.codec.kryo.FileSerializer
2018-04-02 11:34:25.934 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 11:34:25.937 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
2018-04-02 11:34:25.937 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-02 11:34:25.947 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-02 11:34:25.948 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2018-04-02 11:34:25.949 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'integrationMbeanExporter' has been autodetected for JMX exposure
2018-04-02 11:34:25.950 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-02 11:34:25.951 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-02 11:34:25.951 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-02 11:34:25.952 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-02 11:34:25.955 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-02 11:34:25.979 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-02 11:34:25.988 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-02 11:34:26.005 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'integrationMbeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=integrationMbeanExporter,type=IntegrationMBeanExporter]
2018-04-02 11:34:26.034 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1023150a,type=ConfigurationPropertiesRebinder]
2018-04-02 11:34:26.038 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
2018-04-02 11:34:26.040 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2018-04-02 11:34:26.052 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-02 11:34:26.058 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2018-04-02 11:34:26.067 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 11:34:26.067 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel hystrixStreamOutput
2018-04-02 11:34:26.071 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput]
2018-04-02 11:34:26.117 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel errorChannel
2018-04-02 11:34:26.120 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=errorChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=errorChannel]
2018-04-02 11:34:26.150 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel nullChannel
2018-04-02 11:34:26.153 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=nullChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=nullChannel]
2018-04-02 11:34:26.173 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageHandler errorLogger
2018-04-02 11:34:26.176 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal': registering with JMX server as MBean [org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal]
2018-04-02 11:34:26.197 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 11:34:27.334 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 11:34:27.340 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 11:34:27.340 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 11:34:27.348 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase -2147482648
2018-04-02 11:34:27.518 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 11:34:27.522 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68812a5c: startup date [Mon Apr 02 11:34:27 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1023150a
2018-04-02 11:34:27.562 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 11:34:27.603 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 11:34:27.611 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 11:34:27.611 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 11:34:27.662 [main] INFO  org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@5b2a23e9: startup date [Mon Apr 02 11:34:27 CST 2018]; root of context hierarchy
2018-04-02 11:34:27.708 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@69052034: startup date [Mon Apr 02 11:34:27 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1023150a
2018-04-02 11:34:27.766 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 11:34:28.204 [main] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 11:34:28.221 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-oa
2018-04-02 11:34:28.226 [main] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: oa instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-04-02 11:34:28.242 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2018-04-02 11:34:28.256 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2018-04-02 11:34:28.271 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-04-02 11:34:28.665 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-04-02 11:34:28.666 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-04-02 11:34:28.856 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-04-02 11:34:28.857 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-04-02 11:34:29.231 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:34:29.301 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-04-02 11:34:29.302 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-04-02 11:34:29.302 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-04-02 11:34:29.302 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-04-02 11:34:29.302 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-04-02 11:34:29.302 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-04-02 11:34:29.303 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-04-02 11:34:29.497 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-04-02 11:34:29.499 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-04-02 11:34:29.501 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-04-02 11:34:29.511 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1522640069504 with initial instances count: 8
2018-04-02 11:34:29.557 [main] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 11:34:29.559 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client oa initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[120.76.44.152:8004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:120.76.44.152:8004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5330160
2018-04-02 11:34:29.631 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 2.27 seconds (JVM running for 30.548)
2018-04-02 11:34:29.711 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2018-04-02 11:34:29.811 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#467c9ad9:0/SimpleConnection@7d1e75f7 [delegate=amqp://admin@127.0.0.1:5672/, localPort= 59208]
2018-04-02 11:34:29.861 [main] INFO  org.springframework.integration.channel.DirectChannel - Channel 'user:8001.hystrixStreamOutput' has 1 subscriber(s).
2018-04-02 11:34:29.862 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2018-04-02 11:34:29.862 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application user with eureka with status UP
2018-04-02 11:34:29.862 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1522640069862, current=UP, previous=STARTING]
2018-04-02 11:34:29.864 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001: registering service...
2018-04-02 11:34:29.873 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-02 11:34:29.888 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-02 11:34:29.897 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-02 11:34:29.901 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-02 11:34:29.904 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001 - registration status: 204
2018-04-02 11:34:29.904 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-02 11:34:29.908 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-02 11:34:29.911 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-02 11:34:29.915 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-02 11:34:29.919 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-02 11:34:29.926 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-02 11:34:29.929 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-02 11:34:29.932 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-02 11:34:29.934 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-02 11:34:29.936 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-02 11:34:29.939 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'channelsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=channelsEndpoint]
2018-04-02 11:34:29.940 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2018-04-02 11:34:29.940 [main] INFO  org.springframework.integration.channel.PublishSubscribeChannel - Channel 'user:8001.errorChannel' has 1 subscriber(s).
2018-04-02 11:34:29.940 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2018-04-02 11:34:29.940 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147482647
2018-04-02 11:34:29.940 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2018-04-02 11:34:29.941 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2018-04-02 11:34:29.961 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2018-04-02 11:34:29.994 [main] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2018-04-02 11:34:30.219 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
2018-04-02 11:34:30.251 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2018-04-02 11:34:30.262 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2018-04-02 11:34:30.280 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-04-02 11:34:30.307 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8001 (http)
2018-04-02 11:34:30.308 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8001
2018-04-02 11:34:30.314 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 30.522 seconds (JVM running for 31.231)
2018-04-02 11:34:59.556 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 11:35:49.242 [http-nio-8001-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-02 11:35:49.243 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2018-04-02 11:35:49.289 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2018-04-02 11:36:23.710 [http-nio-8001-exec-8] INFO  p6spy - |9|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 11:36:23.797 [http-nio-8001-exec-8] INFO  p6spy - |11|statement|connection3|select user0_.user_id as user_id1_3_, user0_.created_date as created_2_3_, user0_.last_modified_date as last_mod3_3_, user0_.account_non_expired as account_4_3_, user0_.account_non_locked as account_5_3_, user0_.avatar as avatar6_3_, user0_.credentials_non_expired as credenti7_3_, user0_.email as email8_3_, user0_.enabled as enabled9_3_, user0_.is_certified as is_cert10_3_, user0_.last_login_date as last_lo11_3_, user0_.last_password_reset_date as last_pa12_3_, user0_.mobile as mobile13_3_, user0_.name as name14_3_, user0_.password as passwor15_3_ from fengmangbilu_user user0_ where user0_.mobile='18086306818'
2018-04-02 11:36:23.860 [http-nio-8001-exec-8] INFO  p6spy - |9|statement|connection3|select roles0_.user_user_id as user_use1_6_1_, roles0_.roles_id as roles_id2_6_1_, role1_.id as id1_1_0_, role1_.created_date as created_2_1_0_, role1_.last_modified_date as last_mod3_1_0_, role1_.name as name4_1_0_, role1_.value as value5_1_0_ from fengmangbilu_user_roles roles0_ inner join fengmangbilu_role role1_ on roles0_.roles_id=role1_.id where roles0_.user_user_id='28313629220016128'
2018-04-02 11:36:23.881 [http-nio-8001-exec-8] INFO  p6spy - |9|statement|connection3|select authoritie0_.role_id as role_id1_2_1_, authoritie0_.authorities_id as authorit2_2_1_, authority1_.id as id1_0_0_, authority1_.created_date as created_2_0_0_, authority1_.last_modified_date as last_mod3_0_0_, authority1_.name as name4_0_0_, authority1_.value as value5_0_0_ from fengmangbilu_role_authorities authoritie0_ inner join fengmangbilu_authority authority1_ on authoritie0_.authorities_id=authority1_.id where authoritie0_.role_id in (3, 1)
2018-04-02 11:36:23.989 [task-scheduler-4] INFO  p6spy - |9|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 11:36:24.021 [task-scheduler-4] INFO  p6spy - |9|statement|connection4|update fengmangbilu_user set last_login_date=now() where user_id='28313629220016128'
2018-04-02 11:36:24.032 [task-scheduler-4] INFO  p6spy - |9|commit|connection4|
2018-04-02 11:36:38.292 [task-scheduler-4] INFO  p6spy - |8|statement|connection4|update fengmangbilu_user set last_login_date=now() where user_id='28313629220016128'
2018-04-02 11:36:38.301 [task-scheduler-4] INFO  p6spy - |8|commit|connection4|
2018-04-02 11:36:38.351 [http-nio-8001-exec-10] INFO  p6spy - |11|statement|connection4|select user0_.user_id as user_id1_3_0_, user0_.created_date as created_2_3_0_, user0_.last_modified_date as last_mod3_3_0_, user0_.account_non_expired as account_4_3_0_, user0_.account_non_locked as account_5_3_0_, user0_.avatar as avatar6_3_0_, user0_.credentials_non_expired as credenti7_3_0_, user0_.email as email8_3_0_, user0_.enabled as enabled9_3_0_, user0_.is_certified as is_cert10_3_0_, user0_.last_login_date as last_lo11_3_0_, user0_.last_password_reset_date as last_pa12_3_0_, user0_.mobile as mobile13_3_0_, user0_.name as name14_3_0_, user0_.password as passwor15_3_0_, roles1_.user_user_id as user_use1_6_1_, role2_.id as roles_id2_6_1_, role2_.id as id1_1_2_, role2_.created_date as created_2_1_2_, role2_.last_modified_date as last_mod3_1_2_, role2_.name as name4_1_2_, role2_.value as value5_1_2_, authoritie3_.role_id as role_id1_2_3_, authority4_.id as authorit2_2_3_, authority4_.id as id1_0_4_, authority4_.created_date as created_2_0_4_, authority4_.last_modified_date as last_mod3_0_4_, authority4_.name as name4_0_4_, authority4_.value as value5_0_4_ from fengmangbilu_user user0_ left outer join fengmangbilu_user_roles roles1_ on user0_.user_id=roles1_.user_user_id left outer join fengmangbilu_role role2_ on roles1_.roles_id=role2_.id left outer join fengmangbilu_role_authorities authoritie3_ on role2_.id=authoritie3_.role_id left outer join fengmangbilu_authority authority4_ on authoritie3_.authorities_id=authority4_.id where user0_.user_id='28313629220016128'
2018-04-02 11:36:38.366 [http-nio-8001-exec-10] INFO  p6spy - |8|commit|connection4|
2018-04-02 11:37:03.970 [task-scheduler-6] INFO  p6spy - |9|statement|connection4|update fengmangbilu_user set last_login_date=now() where user_id='28313629220016128'
2018-04-02 11:37:03.981 [task-scheduler-6] INFO  p6spy - |10|commit|connection4|
2018-04-02 11:37:03.983 [http-nio-8001-exec-4] INFO  p6spy - |12|statement|connection3|select user0_.user_id as user_id1_3_0_, user0_.created_date as created_2_3_0_, user0_.last_modified_date as last_mod3_3_0_, user0_.account_non_expired as account_4_3_0_, user0_.account_non_locked as account_5_3_0_, user0_.avatar as avatar6_3_0_, user0_.credentials_non_expired as credenti7_3_0_, user0_.email as email8_3_0_, user0_.enabled as enabled9_3_0_, user0_.is_certified as is_cert10_3_0_, user0_.last_login_date as last_lo11_3_0_, user0_.last_password_reset_date as last_pa12_3_0_, user0_.mobile as mobile13_3_0_, user0_.name as name14_3_0_, user0_.password as passwor15_3_0_, roles1_.user_user_id as user_use1_6_1_, role2_.id as roles_id2_6_1_, role2_.id as id1_1_2_, role2_.created_date as created_2_1_2_, role2_.last_modified_date as last_mod3_1_2_, role2_.name as name4_1_2_, role2_.value as value5_1_2_, authoritie3_.role_id as role_id1_2_3_, authority4_.id as authorit2_2_3_, authority4_.id as id1_0_4_, authority4_.created_date as created_2_0_4_, authority4_.last_modified_date as last_mod3_0_4_, authority4_.name as name4_0_4_, authority4_.value as value5_0_4_ from fengmangbilu_user user0_ left outer join fengmangbilu_user_roles roles1_ on user0_.user_id=roles1_.user_user_id left outer join fengmangbilu_role role2_ on roles1_.roles_id=role2_.id left outer join fengmangbilu_role_authorities authoritie3_ on role2_.id=authoritie3_.role_id left outer join fengmangbilu_authority authority4_ on authoritie3_.authorities_id=authority4_.id where user0_.user_id='28313629220016128'
2018-04-02 11:37:03.996 [http-nio-8001-exec-4] INFO  p6spy - |8|commit|connection3|
2018-04-02 11:37:06.166 [http-nio-8001-exec-4] INFO  p6spy - |11|statement|connection3|update fengmangbilu_user set avatar='b9f32837d3354838b3a259a8d0c71678.jpeg' where user_id='28313629220016128'
2018-04-02 11:37:06.179 [http-nio-8001-exec-4] INFO  p6spy - |10|commit|connection3|
2018-04-02 11:39:29.309 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:44:29.315 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:49:29.320 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:54:29.326 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 11:59:29.331 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:04:29.336 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:09:29.341 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:14:29.346 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:19:29.351 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:24:29.357 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:29:29.362 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:34:29.368 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:39:29.373 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:44:29.379 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:49:29.384 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:54:29.389 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 12:59:29.395 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:01:50.803 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973: startup date [Mon Apr 02 13:01:50 CST 2018]; root of context hierarchy
2018-04-02 13:01:51.025 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2018-04-02 13:01:51.046 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:01:51.097 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$efc87124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:51.325 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:01:51.426 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:01:51.429 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:01:51.756 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 13:01:51.836 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b965857: startup date [Mon Apr 02 13:01:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 13:01:53.521 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 13:01:53.839 [main] INFO  org.springframework.integration.config.IntegrationRegistrar - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2018-04-02 13:01:53.942 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 13:01:53.995 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointDetailRepository.
2018-04-02 13:01:53.996 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserRepository.
2018-04-02 13:01:53.996 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.RoleRepository.
2018-04-02 13:01:53.998 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointRepository.
2018-04-02 13:01:54.579 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=05455b9c-2899-3ae2-99d6-b41c6fae0260
2018-04-02 13:01:54.624 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2018-04-02 13:01:54.627 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2018-04-02 13:01:54.637 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:01:54.683 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.fengmangbilu.microservice.user.clients.OaClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:54.757 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$9a1a2c55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:54.927 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3ae6e27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.162 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6c5c3661] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.179 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.182 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@41026e5c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.200 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$b685f129] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.210 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.218 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9130d913] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.241 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.259 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1cc0a445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.294 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$113468e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.316 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:01:55.326 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:01:55.327 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:01:55.344 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$$EnhancerBySpringCGLIB$$d3eac61c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.362 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.384 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.409 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.417 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration$$EnhancerBySpringCGLIB$$c1c60543] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.435 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration$$EnhancerBySpringCGLIB$$1950f3b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.461 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.472 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$67a89536] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.537 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.578 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.637 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.651 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.703 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5db1468] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.800 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.804 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.883 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$efc87124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.904 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration' of type [org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration$$EnhancerBySpringCGLIB$$95760c2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:55.923 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties' of type [org.springframework.cloud.stream.config.SpringIntegrationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:01:56.502 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8001 (http)
2018-04-02 13:01:56.515 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-04-02 13:01:56.517 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-04-02 13:01:56.700 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-04-02 13:01:56.700 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4865 ms
2018-04-02 13:01:57.408 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
2018-04-02 13:01:57.408 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-02 13:01:57.409 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-02 13:01:57.409 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-02 13:01:57.409 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2018-04-02 13:01:57.410 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-02 13:01:57.411 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-02 13:01:57.411 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-02 13:01:57.411 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-02 13:01:57.411 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2018-04-02 13:01:57.413 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-02 13:01:57.520 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure - Init DruidDataSource
2018-04-02 13:01:59.092 [main] INFO  p6spy - |12|statement|connection0|SELECT 1 FROM DUAL
2018-04-02 13:01:59.208 [main] INFO  p6spy - |9|statement|connection1|SELECT 1 FROM DUAL
2018-04-02 13:01:59.317 [main] INFO  p6spy - |9|statement|connection2|SELECT 1 FROM DUAL
2018-04-02 13:01:59.401 [main] INFO  p6spy - |5|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 13:01:59.471 [main] INFO  p6spy - |5|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 13:01:59.485 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-04-02 13:02:00.047 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-02 13:02:00.072 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-04-02 13:02:00.259 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.0.12.Final}
2018-04-02 13:02:00.262 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2018-04-02 13:02:00.264 [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2018-04-02 13:02:00.324 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-02 13:02:00.761 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-02 13:02:01.854 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2018-04-02 13:02:03.268 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-02 13:02:04.336 [main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
2018-04-02 13:02:05.200 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5a362dc7: startup date [Mon Apr 02 13:02:05 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b965857
2018-04-02 13:02:05.218 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:02:05.589 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:02:05.599 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:02:05.599 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:02:05.671 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:02:05.682 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:02:05.682 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:02:06.706 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.ErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-02 13:02:06.709 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/point/getUserPointDetails],methods=[GET]}" onto public org.springframework.data.jpa.datatables.mapping.DataTablesOutput<com.fengmangbilu.microservice.user.entities.UserPointDetail> com.fengmangbilu.microservice.user.controllers.PointController.getUserPointDetails(java.lang.String,java.util.Date,java.util.Date,org.springframework.data.jpa.datatables.mapping.DataTablesInput)
2018-04-02 13:02:06.710 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_resetPassword_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendResetPasswordSms(java.lang.String)
2018-04-02 13:02:06.711 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_login_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendLoginSms(java.lang.String)
2018-04-02 13:02:06.711 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_register_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendRegisterSms(java.lang.String)
2018-04-02 13:02:06.712 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.getToken(com.fengmangbilu.microservice.user.endpoints.TokenRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 13:02:06.712 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/smsLogin],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.smsLogin(com.fengmangbilu.microservice.user.endpoints.LoginRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 13:02:06.712 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/refreshToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.refreshToken(java.lang.String)
2018-04-02 13:02:06.715 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/register],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.register(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 13:02:06.715 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserInfo],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserInfo(java.lang.String)
2018-04-02 13:02:06.716 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/deleteAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.deleteAvatar(java.lang.String) throws com.qiniu.common.QiniuException
2018-04-02 13:02:06.716 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resetPassword],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.resetPassword(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 13:02:06.716 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/uploadAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.uploadAvatar(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.qiniu.common.QiniuException
2018-04-02 13:02:06.716 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/updateAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.updateAvatar(java.lang.String,java.lang.String)
2018-04-02 13:02:06.717 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUpToken],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUpToken(java.lang.String)
2018-04-02 13:02:06.717 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/certifiedIdCard],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.certifiedIdCard(java.lang.String,java.lang.String,com.fengmangbilu.microservice.user.endpoints.IdCardRequest) throws java.lang.Exception
2018-04-02 13:02:06.718 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/findByMobile],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.findByMobile(java.lang.String)
2018-04-02 13:02:06.718 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserHrRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserHrRole(java.lang.String)
2018-04-02 13:02:06.718 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserEmpRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserEmpRole(java.lang.String)
2018-04-02 13:02:06.720 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-02 13:02:06.722 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-02 13:02:06.723 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-02 13:02:06.858 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 13:02:06.869 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@19a652cd
2018-04-02 13:02:08.919 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/features || /actuator/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.920 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 13:02:08.920 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-02 13:02:08.921 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/archaius || /actuator/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.922 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/info || /actuator/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.922 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-02 13:02:08.922 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-02 13:02:08.923 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-02 13:02:08.924 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env || /actuator/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.924 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/beans || /actuator/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.925 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-02 13:02:08.925 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics || /actuator/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.926 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/configprops || /actuator/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.926 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/trace || /actuator/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.927 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/refresh || /actuator/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-02 13:02:08.928 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/health || /actuator/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-02 13:02:08.928 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/mappings || /actuator/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.929 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/dump || /actuator/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.930 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/auditevents || /actuator/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-02 13:02:08.930 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/channels || /actuator/channels.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.931 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/heapdump || /actuator/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-02 13:02:08.932 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-02 13:02:08.933 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/autoconfig || /actuator/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:08.935 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-02 13:02:08.936 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 13:02:08.936 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers || /actuator/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:02:09.411 [main] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-04-02 13:02:09.833 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 13:02:09.910 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:02:09.916 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:02:09.916 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:02:10.087 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b965857: startup date [Mon Apr 02 13:01:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 13:02:10.097 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Detected ResponseBodyAdvice bean in jsonFilterResponseBodyAdvice
2018-04-02 13:02:10.301 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 13:02:10.301 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 13:02:10.372 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in errorController
2018-04-02 13:02:10.372 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected ResponseBodyAdvice implementation in jsonFilterResponseBodyAdvice
2018-04-02 13:02:10.372 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in defaultExceptionHandler
2018-04-02 13:02:10.460 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 13:02:11.071 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/resetPassword'], Ant [pattern='/register'], Ant [pattern='/smsLogin'], Ant [pattern='/getToken'], Ant [pattern='/refreshToken'], Ant [pattern='/send_**_sms'], Ant [pattern='/findByMobile'], Ant [pattern='/error']]], []
2018-04-02 13:02:11.072 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 13:02:11.072 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs/**'], []
2018-04-02 13:02:11.072 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2018-04-02 13:02:11.072 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/druid/**'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/resetPassword'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/register'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/smsLogin'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/getToken'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/refreshToken'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/send_**_sms'], []
2018-04-02 13:02:11.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/findByMobile'], []
2018-04-02 13:02:11.221 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b8117f4, org.springframework.security.web.context.SecurityContextPersistenceFilter@3cdb3788, org.springframework.security.web.header.HeaderWriterFilter@6272fe30, org.springframework.security.web.authentication.logout.LogoutFilter@15f8b713, com.fengmangbilu.security.authentication.TokenAuthenticationProcessingFilter@2655ad3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a6a0107, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34552734, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62af3d4c, org.springframework.security.web.session.SessionManagementFilter@52743ef2, org.springframework.security.web.access.ExceptionTranslationFilter@4e5dcc50, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ececd11]
2018-04-02 13:02:11.229 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@350cf434, org.springframework.security.web.context.SecurityContextPersistenceFilter@4670caf6, org.springframework.security.web.header.HeaderWriterFilter@1e287867, org.springframework.security.web.authentication.logout.LogoutFilter@675f9bc6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25712d03, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78c7928a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51761e07, org.springframework.security.web.session.SessionManagementFilter@5249b9c5, org.springframework.security.web.access.ExceptionTranslationFilter@3e0bbd36, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@548051d7]
2018-04-02 13:02:11.254 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3a6dd085, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@559ff07, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d5a21cc, org.springframework.security.web.header.HeaderWriterFilter@1231e446, org.springframework.security.web.csrf.CsrfFilter@9fec3a3, org.springframework.security.web.authentication.logout.LogoutFilter@2625c1cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3990c36c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@241e03cc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@510d8c03, org.springframework.security.web.session.SessionManagementFilter@32c60fec, org.springframework.security.web.access.ExceptionTranslationFilter@7190b5ce]
2018-04-02 13:02:12.045 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService  'taskScheduler'
2018-04-02 13:02:12.958 [main] INFO  org.springframework.integration.codec.kryo.CompositeKryoRegistrar - configured Kryo registration [40, java.io.File] with serializer org.springframework.integration.codec.kryo.FileSerializer
2018-04-02 13:02:13.532 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 13:02:13.535 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
2018-04-02 13:02:13.535 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-02 13:02:13.544 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-02 13:02:13.545 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2018-04-02 13:02:13.546 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'integrationMbeanExporter' has been autodetected for JMX exposure
2018-04-02 13:02:13.547 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-02 13:02:13.548 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-02 13:02:13.548 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-02 13:02:13.549 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-02 13:02:13.553 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-02 13:02:13.574 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-02 13:02:13.581 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-02 13:02:13.599 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'integrationMbeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=integrationMbeanExporter,type=IntegrationMBeanExporter]
2018-04-02 13:02:13.632 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=b965857,type=ConfigurationPropertiesRebinder]
2018-04-02 13:02:13.636 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
2018-04-02 13:02:13.639 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2018-04-02 13:02:13.653 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-02 13:02:13.660 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2018-04-02 13:02:13.671 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 13:02:13.671 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel hystrixStreamOutput
2018-04-02 13:02:13.677 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput]
2018-04-02 13:02:13.721 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel nullChannel
2018-04-02 13:02:13.724 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=nullChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=nullChannel]
2018-04-02 13:02:13.731 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel errorChannel
2018-04-02 13:02:13.734 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=errorChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=errorChannel]
2018-04-02 13:02:13.784 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageHandler errorLogger
2018-04-02 13:02:13.786 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal': registering with JMX server as MBean [org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal]
2018-04-02 13:02:13.807 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 13:02:14.938 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:02:14.945 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:02:14.945 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:02:14.952 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase -2147482648
2018-04-02 13:02:15.126 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 13:02:15.128 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4dbad471: startup date [Mon Apr 02 13:02:15 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b965857
2018-04-02 13:02:15.171 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:02:15.214 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:02:15.220 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:02:15.220 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:02:15.272 [main] INFO  org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@722dd1df: startup date [Mon Apr 02 13:02:15 CST 2018]; root of context hierarchy
2018-04-02 13:02:15.332 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@600dfbca: startup date [Mon Apr 02 13:02:15 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b965857
2018-04-02 13:02:15.384 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:02:15.793 [main] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 13:02:15.812 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-oa
2018-04-02 13:02:15.819 [main] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: oa instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-04-02 13:02:15.826 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2018-04-02 13:02:15.843 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2018-04-02 13:02:15.861 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-04-02 13:02:16.545 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-04-02 13:02:16.546 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-04-02 13:02:16.743 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-04-02 13:02:16.743 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-04-02 13:02:17.018 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:02:17.080 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-04-02 13:02:17.080 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-04-02 13:02:17.081 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-04-02 13:02:17.081 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-04-02 13:02:17.081 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-04-02 13:02:17.081 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-04-02 13:02:17.081 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-04-02 13:02:17.252 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-04-02 13:02:17.254 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-04-02 13:02:17.257 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-04-02 13:02:17.266 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1522645337259 with initial instances count: 8
2018-04-02 13:02:17.320 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client oa initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:120.76.44.152:8004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5cea18bc
2018-04-02 13:02:17.321 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 13:02:17.382 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 2.415 seconds (JVM running for 27.795)
2018-04-02 13:02:17.432 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2018-04-02 13:02:17.480 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#66bd6746:0/SimpleConnection@76a34504 [delegate=amqp://admin@127.0.0.1:5672/, localPort= 62753]
2018-04-02 13:02:17.537 [main] INFO  org.springframework.integration.channel.DirectChannel - Channel 'user:8001.hystrixStreamOutput' has 1 subscriber(s).
2018-04-02 13:02:17.539 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2018-04-02 13:02:17.539 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application user with eureka with status UP
2018-04-02 13:02:17.539 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1522645337539, current=UP, previous=STARTING]
2018-04-02 13:02:17.541 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001: registering service...
2018-04-02 13:02:17.548 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-02 13:02:17.571 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-02 13:02:17.582 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-02 13:02:17.585 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-02 13:02:17.588 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001 - registration status: 204
2018-04-02 13:02:17.588 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-02 13:02:17.591 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-02 13:02:17.595 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-02 13:02:17.598 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-02 13:02:17.601 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-02 13:02:17.608 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-02 13:02:17.611 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-02 13:02:17.615 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-02 13:02:17.618 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-02 13:02:17.621 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-02 13:02:17.624 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'channelsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=channelsEndpoint]
2018-04-02 13:02:17.625 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2018-04-02 13:02:17.625 [main] INFO  org.springframework.integration.channel.PublishSubscribeChannel - Channel 'user:8001.errorChannel' has 1 subscriber(s).
2018-04-02 13:02:17.625 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2018-04-02 13:02:17.625 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147482647
2018-04-02 13:02:17.625 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2018-04-02 13:02:17.626 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2018-04-02 13:02:17.649 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2018-04-02 13:02:17.684 [main] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2018-04-02 13:02:17.872 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
2018-04-02 13:02:17.898 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2018-04-02 13:02:17.915 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2018-04-02 13:02:17.932 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-04-02 13:02:17.954 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8001 (http)
2018-04-02 13:02:17.955 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8001
2018-04-02 13:02:17.959 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 27.817 seconds (JVM running for 28.372)
2018-04-02 13:17:26.489 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973: startup date [Mon Apr 02 13:17:26 CST 2018]; root of context hierarchy
2018-04-02 13:17:26.716 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2018-04-02 13:17:26.739 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:17:26.792 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8de1a3a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:26.980 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:17:27.035 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:17:27.036 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:17:27.329 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 13:17:27.376 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a0ac48e: startup date [Mon Apr 02 13:17:27 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 13:17:28.296 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 13:17:28.577 [main] INFO  org.springframework.integration.config.IntegrationRegistrar - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2018-04-02 13:17:28.670 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 13:17:28.710 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointDetailRepository.
2018-04-02 13:17:28.711 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserRepository.
2018-04-02 13:17:28.712 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.RoleRepository.
2018-04-02 13:17:28.713 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointRepository.
2018-04-02 13:17:29.265 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=05455b9c-2899-3ae2-99d6-b41c6fae0260
2018-04-02 13:17:29.307 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2018-04-02 13:17:29.309 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2018-04-02 13:17:29.319 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:17:29.367 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.fengmangbilu.microservice.user.clients.OaClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.430 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$38335ed4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.608 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71c7a0a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.833 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a7568e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.850 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.853 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@395eb363' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.872 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$549f23a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.885 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.892 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2f4a0b92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.915 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.938 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$bad9d6c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:29.974 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$af4d9b68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.002 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:17:30.014 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:17:30.015 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:17:30.029 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$$EnhancerBySpringCGLIB$$7203f89b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.043 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.060 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.081 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.088 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration$$EnhancerBySpringCGLIB$$5fdf37c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.103 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration$$EnhancerBySpringCGLIB$$b76a2633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.130 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.143 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$5c1c7b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.204 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.242 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.296 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.307 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.363 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a3f446e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.431 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.437 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.544 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8de1a3a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.563 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration' of type [org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration$$EnhancerBySpringCGLIB$$338f3eab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:30.586 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties' of type [org.springframework.cloud.stream.config.SpringIntegrationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 13:17:31.149 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8001 (http)
2018-04-02 13:17:31.161 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-04-02 13:17:31.162 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-04-02 13:17:31.319 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-04-02 13:17:31.319 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3943 ms
2018-04-02 13:17:32.079 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
2018-04-02 13:17:32.080 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-02 13:17:32.080 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-02 13:17:32.081 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-02 13:17:32.081 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2018-04-02 13:17:32.083 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-02 13:17:32.084 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-02 13:17:32.084 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-02 13:17:32.085 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-02 13:17:32.085 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2018-04-02 13:17:32.086 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-02 13:17:32.190 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure - Init DruidDataSource
2018-04-02 13:17:33.711 [main] INFO  p6spy - |10|statement|connection0|SELECT 1 FROM DUAL
2018-04-02 13:17:33.815 [main] INFO  p6spy - |8|statement|connection1|SELECT 1 FROM DUAL
2018-04-02 13:17:33.894 [main] INFO  p6spy - |5|statement|connection2|SELECT 1 FROM DUAL
2018-04-02 13:17:33.965 [main] INFO  p6spy - |5|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 13:17:34.032 [main] INFO  p6spy - |4|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 13:17:34.047 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-04-02 13:17:34.543 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-02 13:17:34.561 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-04-02 13:17:34.662 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.0.12.Final}
2018-04-02 13:17:34.665 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2018-04-02 13:17:34.668 [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2018-04-02 13:17:34.722 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-02 13:17:35.011 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-02 13:17:35.895 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2018-04-02 13:17:37.134 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-02 13:17:38.164 [main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
2018-04-02 13:17:38.974 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c0a4c8b: startup date [Mon Apr 02 13:17:38 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a0ac48e
2018-04-02 13:17:38.994 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:17:39.371 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:17:39.378 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:17:39.379 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:17:39.425 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:17:39.433 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:17:39.433 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:17:40.422 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.ErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-02 13:17:40.423 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/point/getUserPointDetails],methods=[GET]}" onto public org.springframework.data.jpa.datatables.mapping.DataTablesOutput<com.fengmangbilu.microservice.user.entities.UserPointDetail> com.fengmangbilu.microservice.user.controllers.PointController.getUserPointDetails(java.lang.String,java.util.Date,java.util.Date,org.springframework.data.jpa.datatables.mapping.DataTablesInput)
2018-04-02 13:17:40.424 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_login_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendLoginSms(java.lang.String)
2018-04-02 13:17:40.425 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_register_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendRegisterSms(java.lang.String)
2018-04-02 13:17:40.425 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_resetPassword_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendResetPasswordSms(java.lang.String)
2018-04-02 13:17:40.425 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.getToken(com.fengmangbilu.microservice.user.endpoints.TokenRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 13:17:40.426 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/smsLogin],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.smsLogin(com.fengmangbilu.microservice.user.endpoints.LoginRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 13:17:40.426 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/refreshToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.refreshToken(java.lang.String)
2018-04-02 13:17:40.428 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/register],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.register(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 13:17:40.428 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserInfo],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserInfo(java.lang.String)
2018-04-02 13:17:40.428 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/deleteAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.deleteAvatar(java.lang.String) throws com.qiniu.common.QiniuException
2018-04-02 13:17:40.429 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resetPassword],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.resetPassword(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 13:17:40.429 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/uploadAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.uploadAvatar(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.qiniu.common.QiniuException
2018-04-02 13:17:40.429 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/updateAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.updateAvatar(java.lang.String,java.lang.String)
2018-04-02 13:17:40.429 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUpToken],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUpToken(java.lang.String)
2018-04-02 13:17:40.430 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/certifiedIdCard],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.certifiedIdCard(java.lang.String,java.lang.String,com.fengmangbilu.microservice.user.endpoints.IdCardRequest) throws java.lang.Exception
2018-04-02 13:17:40.430 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/findByMobile],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.findByMobile(java.lang.String)
2018-04-02 13:17:40.430 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserHrRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserHrRole(java.lang.String)
2018-04-02 13:17:40.430 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserEmpRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserEmpRole(java.lang.String)
2018-04-02 13:17:40.431 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserPermission],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserPermission(java.lang.String)
2018-04-02 13:17:40.433 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-02 13:17:40.434 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-02 13:17:40.435 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-02 13:17:40.564 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 13:17:40.573 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@52421f92
2018-04-02 13:17:42.662 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-02 13:17:42.663 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-02 13:17:42.664 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/archaius || /actuator/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.665 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/autoconfig || /actuator/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.666 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-02 13:17:42.667 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 13:17:42.667 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers || /actuator/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.668 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/beans || /actuator/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.668 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/channels || /actuator/channels.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.669 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/info || /actuator/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.671 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/health || /actuator/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-02 13:17:42.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/configprops || /actuator/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.673 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-02 13:17:42.673 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics || /actuator/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.675 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/heapdump || /actuator/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-02 13:17:42.677 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 13:17:42.677 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-02 13:17:42.678 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-02 13:17:42.679 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-02 13:17:42.679 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env || /actuator/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.680 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/refresh || /actuator/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-02 13:17:42.681 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/trace || /actuator/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.681 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/features || /actuator/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.682 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/dump || /actuator/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.683 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/mappings || /actuator/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 13:17:42.684 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/auditevents || /actuator/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-02 13:17:43.146 [main] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-04-02 13:17:43.567 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 13:17:43.635 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:17:43.642 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:17:43.642 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:17:43.827 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a0ac48e: startup date [Mon Apr 02 13:17:27 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 13:17:43.835 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Detected ResponseBodyAdvice bean in jsonFilterResponseBodyAdvice
2018-04-02 13:17:44.040 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 13:17:44.040 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 13:17:44.101 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in errorController
2018-04-02 13:17:44.102 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected ResponseBodyAdvice implementation in jsonFilterResponseBodyAdvice
2018-04-02 13:17:44.102 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in defaultExceptionHandler
2018-04-02 13:17:44.193 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 13:17:44.797 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/resetPassword'], Ant [pattern='/register'], Ant [pattern='/smsLogin'], Ant [pattern='/getToken'], Ant [pattern='/refreshToken'], Ant [pattern='/send_**_sms'], Ant [pattern='/findByMobile'], Ant [pattern='/error']]], []
2018-04-02 13:17:44.797 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 13:17:44.797 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs/**'], []
2018-04-02 13:17:44.797 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2018-04-02 13:17:44.797 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/druid/**'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/resetPassword'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/register'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/smsLogin'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/getToken'], []
2018-04-02 13:17:44.798 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/refreshToken'], []
2018-04-02 13:17:44.799 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/send_**_sms'], []
2018-04-02 13:17:44.799 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/findByMobile'], []
2018-04-02 13:17:44.976 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a3783e4, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d089ef7, org.springframework.security.web.header.HeaderWriterFilter@6aa09c35, org.springframework.security.web.authentication.logout.LogoutFilter@31809f2b, com.fengmangbilu.security.authentication.TokenAuthenticationProcessingFilter@6087f264, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a670af9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ef4e7f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53bf7b33, org.springframework.security.web.session.SessionManagementFilter@70dd4172, org.springframework.security.web.access.ExceptionTranslationFilter@24df8abf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5e4168dd]
2018-04-02 13:17:44.985 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4843fc3c, org.springframework.security.web.context.SecurityContextPersistenceFilter@23618fa2, org.springframework.security.web.header.HeaderWriterFilter@3fa43b05, org.springframework.security.web.authentication.logout.LogoutFilter@59aba6f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c207c10, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12c21282, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@93370c5, org.springframework.security.web.session.SessionManagementFilter@5083642c, org.springframework.security.web.access.ExceptionTranslationFilter@a64a147, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f1bf2db]
2018-04-02 13:17:45.014 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@373636f3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ca413f6, org.springframework.security.web.context.SecurityContextPersistenceFilter@6cb84986, org.springframework.security.web.header.HeaderWriterFilter@1cbe3497, org.springframework.security.web.csrf.CsrfFilter@2d43bedb, org.springframework.security.web.authentication.logout.LogoutFilter@196ca821, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@449be249, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@296c6cc1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66e478c7, org.springframework.security.web.session.SessionManagementFilter@5c3d91bc, org.springframework.security.web.access.ExceptionTranslationFilter@2ca08575]
2018-04-02 13:17:45.601 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService  'taskScheduler'
2018-04-02 13:17:46.469 [main] INFO  org.springframework.integration.codec.kryo.CompositeKryoRegistrar - configured Kryo registration [40, java.io.File] with serializer org.springframework.integration.codec.kryo.FileSerializer
2018-04-02 13:17:47.058 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 13:17:47.061 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
2018-04-02 13:17:47.061 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-02 13:17:47.069 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-02 13:17:47.070 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2018-04-02 13:17:47.071 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'integrationMbeanExporter' has been autodetected for JMX exposure
2018-04-02 13:17:47.072 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-02 13:17:47.073 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-02 13:17:47.073 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-02 13:17:47.074 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-02 13:17:47.077 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-02 13:17:47.090 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-02 13:17:47.098 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-02 13:17:47.115 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'integrationMbeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=integrationMbeanExporter,type=IntegrationMBeanExporter]
2018-04-02 13:17:47.144 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6a0ac48e,type=ConfigurationPropertiesRebinder]
2018-04-02 13:17:47.148 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
2018-04-02 13:17:47.150 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2018-04-02 13:17:47.160 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-02 13:17:47.165 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2018-04-02 13:17:47.173 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 13:17:47.174 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel hystrixStreamOutput
2018-04-02 13:17:47.177 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput]
2018-04-02 13:17:47.217 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel errorChannel
2018-04-02 13:17:47.220 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=errorChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=errorChannel]
2018-04-02 13:17:47.253 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel nullChannel
2018-04-02 13:17:47.255 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=nullChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=nullChannel]
2018-04-02 13:17:47.273 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageHandler errorLogger
2018-04-02 13:17:47.276 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal': registering with JMX server as MBean [org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal]
2018-04-02 13:17:47.300 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 13:17:48.366 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:17:48.374 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:17:48.374 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:17:48.382 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase -2147482648
2018-04-02 13:17:48.561 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 13:17:48.564 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@64af2288: startup date [Mon Apr 02 13:17:48 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a0ac48e
2018-04-02 13:17:48.616 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:17:48.682 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 13:17:48.689 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 13:17:48.690 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 13:17:48.739 [main] INFO  org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@3bec3641: startup date [Mon Apr 02 13:17:48 CST 2018]; root of context hierarchy
2018-04-02 13:17:48.789 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7bb8ede7: startup date [Mon Apr 02 13:17:48 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a0ac48e
2018-04-02 13:17:48.843 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 13:17:49.185 [main] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 13:17:49.203 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-oa
2018-04-02 13:17:49.208 [main] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: oa instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-04-02 13:17:49.213 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2018-04-02 13:17:49.228 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2018-04-02 13:17:49.241 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-04-02 13:17:49.454 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-04-02 13:17:49.455 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-04-02 13:17:49.576 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-04-02 13:17:49.576 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-04-02 13:17:49.851 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:17:49.907 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-04-02 13:17:49.907 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-04-02 13:17:49.907 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-04-02 13:17:49.908 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-04-02 13:17:49.908 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-04-02 13:17:49.908 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-04-02 13:17:49.909 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-04-02 13:17:50.101 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-04-02 13:17:50.103 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-04-02 13:17:50.105 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-04-02 13:17:50.108 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1522646270107 with initial instances count: 7
2018-04-02 13:17:50.150 [main] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 13:17:50.152 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client oa initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[120.76.44.152:8004, 120.76.44.152:8004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:120.76.44.152:8004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@482f0077
2018-04-02 13:17:50.217 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 13:17:50.221 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 1.826 seconds (JVM running for 24.726)
2018-04-02 13:17:50.269 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2018-04-02 13:17:50.316 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#5e9fb3b7:0/SimpleConnection@323e4f13 [delegate=amqp://admin@127.0.0.1:5672/, localPort= 64255]
2018-04-02 13:17:50.348 [main] INFO  org.springframework.integration.channel.DirectChannel - Channel 'user:8001.hystrixStreamOutput' has 1 subscriber(s).
2018-04-02 13:17:50.349 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2018-04-02 13:17:50.349 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application user with eureka with status UP
2018-04-02 13:17:50.350 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1522646270350, current=UP, previous=STARTING]
2018-04-02 13:17:50.352 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001: registering service...
2018-04-02 13:17:50.356 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-02 13:17:50.368 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-02 13:17:50.378 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-02 13:17:50.381 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-02 13:17:50.385 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-02 13:17:50.387 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001 - registration status: 204
2018-04-02 13:17:50.389 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-02 13:17:50.392 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-02 13:17:50.394 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-02 13:17:50.398 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-02 13:17:50.404 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-02 13:17:50.407 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-02 13:17:50.410 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-02 13:17:50.412 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-02 13:17:50.414 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-02 13:17:50.417 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'channelsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=channelsEndpoint]
2018-04-02 13:17:50.418 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2018-04-02 13:17:50.418 [main] INFO  org.springframework.integration.channel.PublishSubscribeChannel - Channel 'user:8001.errorChannel' has 1 subscriber(s).
2018-04-02 13:17:50.419 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2018-04-02 13:17:50.419 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147482647
2018-04-02 13:17:50.419 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2018-04-02 13:17:50.419 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2018-04-02 13:17:50.438 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2018-04-02 13:17:50.476 [main] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2018-04-02 13:17:50.679 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
2018-04-02 13:17:50.709 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2018-04-02 13:17:50.720 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2018-04-02 13:17:50.731 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-04-02 13:17:50.756 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8001 (http)
2018-04-02 13:17:50.757 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8001
2018-04-02 13:17:50.761 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 24.85 seconds (JVM running for 25.266)
2018-04-02 13:18:49.336 [http-nio-8001-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-02 13:18:49.336 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2018-04-02 13:18:49.357 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2018-04-02 13:19:03.286 [task-scheduler-8] INFO  p6spy - |5|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 13:19:03.333 [http-nio-8001-exec-2] INFO  p6spy - |5|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 13:19:03.397 [task-scheduler-8] INFO  p6spy - |7|statement|connection3|update fengmangbilu_user set last_login_date=now() where user_id='28313629220016128'
2018-04-02 13:19:03.397 [http-nio-8001-exec-2] INFO  p6spy - |7|statement|connection4|select user0_.user_id as user_id1_3_0_, user0_.created_date as created_2_3_0_, user0_.last_modified_date as last_mod3_3_0_, user0_.account_non_expired as account_4_3_0_, user0_.account_non_locked as account_5_3_0_, user0_.avatar as avatar6_3_0_, user0_.credentials_non_expired as credenti7_3_0_, user0_.email as email8_3_0_, user0_.enabled as enabled9_3_0_, user0_.is_certified as is_cert10_3_0_, user0_.last_login_date as last_lo11_3_0_, user0_.last_password_reset_date as last_pa12_3_0_, user0_.mobile as mobile13_3_0_, user0_.name as name14_3_0_, user0_.password as passwor15_3_0_, roles1_.user_user_id as user_use1_6_1_, role2_.id as roles_id2_6_1_, role2_.id as id1_1_2_, role2_.created_date as created_2_1_2_, role2_.last_modified_date as last_mod3_1_2_, role2_.name as name4_1_2_, role2_.value as value5_1_2_, authoritie3_.role_id as role_id1_2_3_, authority4_.id as authorit2_2_3_, authority4_.id as id1_0_4_, authority4_.created_date as created_2_0_4_, authority4_.last_modified_date as last_mod3_0_4_, authority4_.name as name4_0_4_, authority4_.value as value5_0_4_ from fengmangbilu_user user0_ left outer join fengmangbilu_user_roles roles1_ on user0_.user_id=roles1_.user_user_id left outer join fengmangbilu_role role2_ on roles1_.roles_id=role2_.id left outer join fengmangbilu_role_authorities authoritie3_ on role2_.id=authoritie3_.role_id left outer join fengmangbilu_authority authority4_ on authoritie3_.authorities_id=authority4_.id where user0_.user_id='28313629220016128'
2018-04-02 13:19:03.406 [task-scheduler-8] INFO  p6spy - |5|commit|connection3|
2018-04-02 13:19:03.448 [http-nio-8001-exec-2] INFO  p6spy - |4|commit|connection4|
2018-04-02 13:19:41.105 [http-nio-8001-exec-5] INFO  p6spy - |8|statement|connection4|select user0_.user_id as user_id1_3_0_, user0_.created_date as created_2_3_0_, user0_.last_modified_date as last_mod3_3_0_, user0_.account_non_expired as account_4_3_0_, user0_.account_non_locked as account_5_3_0_, user0_.avatar as avatar6_3_0_, user0_.credentials_non_expired as credenti7_3_0_, user0_.email as email8_3_0_, user0_.enabled as enabled9_3_0_, user0_.is_certified as is_cert10_3_0_, user0_.last_login_date as last_lo11_3_0_, user0_.last_password_reset_date as last_pa12_3_0_, user0_.mobile as mobile13_3_0_, user0_.name as name14_3_0_, user0_.password as passwor15_3_0_, roles1_.user_user_id as user_use1_6_1_, role2_.id as roles_id2_6_1_, role2_.id as id1_1_2_, role2_.created_date as created_2_1_2_, role2_.last_modified_date as last_mod3_1_2_, role2_.name as name4_1_2_, role2_.value as value5_1_2_, authoritie3_.role_id as role_id1_2_3_, authority4_.id as authorit2_2_3_, authority4_.id as id1_0_4_, authority4_.created_date as created_2_0_4_, authority4_.last_modified_date as last_mod3_0_4_, authority4_.name as name4_0_4_, authority4_.value as value5_0_4_ from fengmangbilu_user user0_ left outer join fengmangbilu_user_roles roles1_ on user0_.user_id=roles1_.user_user_id left outer join fengmangbilu_role role2_ on roles1_.roles_id=role2_.id left outer join fengmangbilu_role_authorities authoritie3_ on role2_.id=authoritie3_.role_id left outer join fengmangbilu_authority authority4_ on authoritie3_.authorities_id=authority4_.id where user0_.user_id='31034003428216832'
2018-04-02 13:19:41.108 [task-scheduler-5] INFO  p6spy - |5|statement|connection3|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 13:19:41.112 [http-nio-8001-exec-5] INFO  p6spy - |5|commit|connection4|
2018-04-02 13:19:41.114 [task-scheduler-5] INFO  p6spy - |5|commit|connection3|
2018-04-02 13:22:49.915 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:27:49.922 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:32:49.927 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:37:49.932 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:42:49.937 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:47:49.943 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:52:49.949 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 13:57:49.955 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:02:49.961 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:07:49.967 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:12:49.972 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:17:49.977 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:22:49.983 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:27:49.988 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:32:49.993 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:37:49.998 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:42:50.003 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:47:50.008 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:52:50.014 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 14:57:50.019 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:02:50.024 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:07:50.029 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:12:50.034 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:17:50.039 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:22:50.045 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:27:50.050 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:32:50.055 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:33:55.937 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973: startup date [Mon Apr 02 15:33:55 CST 2018]; root of context hierarchy
2018-04-02 15:33:56.189 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2018-04-02 15:33:56.198 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:33:56.246 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$183dc955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:33:56.485 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:33:56.595 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:33:56.607 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:33:56.911 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 15:33:56.995 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34fe326d: startup date [Mon Apr 02 15:33:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 15:33:58.665 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 15:33:59.013 [main] INFO  org.springframework.integration.config.IntegrationRegistrar - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2018-04-02 15:33:59.123 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 15:33:59.172 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointDetailRepository.
2018-04-02 15:33:59.173 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserRepository.
2018-04-02 15:33:59.173 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.RoleRepository.
2018-04-02 15:33:59.175 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointRepository.
2018-04-02 15:33:59.739 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=05455b9c-2899-3ae2-99d6-b41c6fae0260
2018-04-02 15:33:59.786 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2018-04-02 15:33:59.789 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2018-04-02 15:33:59.799 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:33:59.843 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.fengmangbilu.microservice.user.clients.OaClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:33:59.912 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$c28f8486] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.091 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc23c658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.348 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$94d18e92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.365 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.368 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@256a5df0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.385 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$defb495a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.398 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.407 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b9a63144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.432 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.461 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$4535fc76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.492 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$39a9c11a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.510 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:34:00.519 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:34:00.519 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:34:00.533 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$$EnhancerBySpringCGLIB$$fc601e4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.547 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.564 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.588 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.593 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration$$EnhancerBySpringCGLIB$$ea3b5d74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.606 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration$$EnhancerBySpringCGLIB$$41c64be5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.629 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.639 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$901ded67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.700 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.729 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.776 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.788 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.831 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2e506c99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.893 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.898 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.968 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$183dc955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:00.988 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration' of type [org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration$$EnhancerBySpringCGLIB$$bdeb645d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:01.007 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties' of type [org.springframework.cloud.stream.config.SpringIntegrationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:34:01.581 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8001 (http)
2018-04-02 15:34:01.593 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-04-02 15:34:01.594 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-04-02 15:34:01.761 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-04-02 15:34:01.761 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4766 ms
2018-04-02 15:34:02.393 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
2018-04-02 15:34:02.394 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-02 15:34:02.394 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-02 15:34:02.394 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-02 15:34:02.394 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2018-04-02 15:34:02.396 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-02 15:34:02.396 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-02 15:34:02.396 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-02 15:34:02.396 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-02 15:34:02.397 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2018-04-02 15:34:02.398 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-02 15:34:02.498 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure - Init DruidDataSource
2018-04-02 15:34:04.041 [main] INFO  p6spy - |9|statement|connection0|SELECT 1 FROM DUAL
2018-04-02 15:34:04.111 [main] INFO  p6spy - |5|statement|connection1|SELECT 1 FROM DUAL
2018-04-02 15:34:04.187 [main] INFO  p6spy - |6|statement|connection2|SELECT 1 FROM DUAL
2018-04-02 15:34:04.290 [main] INFO  p6spy - |7|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 15:34:04.369 [main] INFO  p6spy - |5|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 15:34:04.385 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-04-02 15:34:04.878 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-02 15:34:04.901 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-04-02 15:34:05.017 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.0.12.Final}
2018-04-02 15:34:05.019 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2018-04-02 15:34:05.020 [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2018-04-02 15:34:05.083 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-02 15:34:05.443 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-02 15:34:06.509 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2018-04-02 15:34:08.178 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-02 15:34:09.187 [main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
2018-04-02 15:34:10.023 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2b3247f8: startup date [Mon Apr 02 15:34:10 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34fe326d
2018-04-02 15:34:10.042 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:34:10.568 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:34:10.576 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:34:10.576 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:34:10.634 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:34:10.645 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:34:10.645 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:34:11.723 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.ErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-02 15:34:11.726 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/point/getUserPointDetails],methods=[GET]}" onto public org.springframework.data.jpa.datatables.mapping.DataTablesOutput<com.fengmangbilu.microservice.user.entities.UserPointDetail> com.fengmangbilu.microservice.user.controllers.PointController.getUserPointDetails(java.lang.String,java.util.Date,java.util.Date,org.springframework.data.jpa.datatables.mapping.DataTablesInput)
2018-04-02 15:34:11.728 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_login_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendLoginSms(java.lang.String)
2018-04-02 15:34:11.728 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_register_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendRegisterSms(java.lang.String)
2018-04-02 15:34:11.729 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_resetPassword_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendResetPasswordSms(java.lang.String)
2018-04-02 15:34:11.730 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.getToken(com.fengmangbilu.microservice.user.endpoints.TokenRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 15:34:11.730 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/smsLogin],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.smsLogin(com.fengmangbilu.microservice.user.endpoints.LoginRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 15:34:11.730 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/refreshToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.refreshToken(java.lang.String)
2018-04-02 15:34:11.733 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/register],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.register(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 15:34:11.733 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserInfo],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserInfo(java.lang.String)
2018-04-02 15:34:11.734 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserPermission],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserPermission(java.lang.String)
2018-04-02 15:34:11.734 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/deleteAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.deleteAvatar(java.lang.String) throws com.qiniu.common.QiniuException
2018-04-02 15:34:11.734 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resetPassword],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.resetPassword(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 15:34:11.735 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/uploadAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.uploadAvatar(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.qiniu.common.QiniuException
2018-04-02 15:34:11.735 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/updateAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.updateAvatar(java.lang.String,java.lang.String)
2018-04-02 15:34:11.735 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUpToken],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUpToken(java.lang.String)
2018-04-02 15:34:11.736 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/certifiedIdCard],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.certifiedIdCard(java.lang.String,java.lang.String,com.fengmangbilu.microservice.user.endpoints.IdCardRequest) throws java.lang.Exception
2018-04-02 15:34:11.736 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/findByMobile],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.findByMobile(java.lang.String)
2018-04-02 15:34:11.736 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserHrRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserHrRole(java.lang.String)
2018-04-02 15:34:11.737 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserEmpRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserEmpRole(java.lang.String)
2018-04-02 15:34:11.737 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resetUserRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.resetUserRole(java.lang.String)
2018-04-02 15:34:11.740 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-02 15:34:11.742 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-02 15:34:11.743 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-02 15:34:11.896 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 15:34:11.903 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@765cb6c1
2018-04-02 15:34:13.969 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-02 15:34:13.970 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics || /actuator/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.970 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/archaius || /actuator/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.970 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/dump || /actuator/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.971 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/health || /actuator/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-02 15:34:13.972 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/refresh || /actuator/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-02 15:34:13.972 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/features || /actuator/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.973 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-02 15:34:13.973 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 15:34:13.974 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-02 15:34:13.975 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-02 15:34:13.975 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env || /actuator/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.976 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/mappings || /actuator/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.977 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/autoconfig || /actuator/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.980 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-02 15:34:13.981 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 15:34:13.981 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers || /actuator/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.982 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/beans || /actuator/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.983 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/configprops || /actuator/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.985 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/heapdump || /actuator/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-02 15:34:13.985 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-02 15:34:13.986 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-02 15:34:13.986 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/info || /actuator/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.987 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/auditevents || /actuator/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-02 15:34:13.988 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/trace || /actuator/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:13.988 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/channels || /actuator/channels.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:34:14.435 [main] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-04-02 15:34:14.859 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 15:34:14.939 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:34:14.948 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:34:14.948 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:34:15.128 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34fe326d: startup date [Mon Apr 02 15:33:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 15:34:15.136 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Detected ResponseBodyAdvice bean in jsonFilterResponseBodyAdvice
2018-04-02 15:34:15.333 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 15:34:15.334 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 15:34:15.408 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in errorController
2018-04-02 15:34:15.409 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected ResponseBodyAdvice implementation in jsonFilterResponseBodyAdvice
2018-04-02 15:34:15.409 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in defaultExceptionHandler
2018-04-02 15:34:15.506 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 15:34:16.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/resetPassword'], Ant [pattern='/register'], Ant [pattern='/smsLogin'], Ant [pattern='/getToken'], Ant [pattern='/refreshToken'], Ant [pattern='/send_**_sms'], Ant [pattern='/findByMobile'], Ant [pattern='/error']]], []
2018-04-02 15:34:16.073 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 15:34:16.074 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs/**'], []
2018-04-02 15:34:16.074 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2018-04-02 15:34:16.074 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2018-04-02 15:34:16.074 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2018-04-02 15:34:16.074 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 15:34:16.074 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/druid/**'], []
2018-04-02 15:34:16.074 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/resetPassword'], []
2018-04-02 15:34:16.075 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/register'], []
2018-04-02 15:34:16.075 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/smsLogin'], []
2018-04-02 15:34:16.075 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/getToken'], []
2018-04-02 15:34:16.075 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/refreshToken'], []
2018-04-02 15:34:16.075 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/send_**_sms'], []
2018-04-02 15:34:16.075 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/findByMobile'], []
2018-04-02 15:34:16.242 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ac94285, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ec73d87, org.springframework.security.web.header.HeaderWriterFilter@74d56a25, org.springframework.security.web.authentication.logout.LogoutFilter@3925aa6a, com.fengmangbilu.security.authentication.TokenAuthenticationProcessingFilter@675d209c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@611b2857, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74575124, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@bfa82bd, org.springframework.security.web.session.SessionManagementFilter@b303504, org.springframework.security.web.access.ExceptionTranslationFilter@1d26e653, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@406fec86]
2018-04-02 15:34:16.248 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@183d22c5, org.springframework.security.web.context.SecurityContextPersistenceFilter@703e55da, org.springframework.security.web.header.HeaderWriterFilter@65cae15a, org.springframework.security.web.authentication.logout.LogoutFilter@2d05291f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@714f3e27, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@433dd165, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3316aded, org.springframework.security.web.session.SessionManagementFilter@75a37ebb, org.springframework.security.web.access.ExceptionTranslationFilter@7e9ffdff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ef342c2]
2018-04-02 15:34:16.278 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@10990a32, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42cb7c94, org.springframework.security.web.context.SecurityContextPersistenceFilter@4310d985, org.springframework.security.web.header.HeaderWriterFilter@4cd78959, org.springframework.security.web.csrf.CsrfFilter@46c09751, org.springframework.security.web.authentication.logout.LogoutFilter@55002de6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61e67cc1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@118bace5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@eeb1cac, org.springframework.security.web.session.SessionManagementFilter@128acee, org.springframework.security.web.access.ExceptionTranslationFilter@76da91cf]
2018-04-02 15:34:16.754 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService  'taskScheduler'
2018-04-02 15:34:17.704 [main] INFO  org.springframework.integration.codec.kryo.CompositeKryoRegistrar - configured Kryo registration [40, java.io.File] with serializer org.springframework.integration.codec.kryo.FileSerializer
2018-04-02 15:34:18.242 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 15:34:18.245 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
2018-04-02 15:34:18.245 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-02 15:34:18.254 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-02 15:34:18.255 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2018-04-02 15:34:18.256 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'integrationMbeanExporter' has been autodetected for JMX exposure
2018-04-02 15:34:18.257 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-02 15:34:18.257 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-02 15:34:18.258 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-02 15:34:18.259 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-02 15:34:18.263 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-02 15:34:18.281 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-02 15:34:18.293 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-02 15:34:18.316 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'integrationMbeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=integrationMbeanExporter,type=IntegrationMBeanExporter]
2018-04-02 15:34:18.358 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=34fe326d,type=ConfigurationPropertiesRebinder]
2018-04-02 15:34:18.364 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
2018-04-02 15:34:18.367 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2018-04-02 15:34:18.380 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-02 15:34:18.386 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2018-04-02 15:34:18.399 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 15:34:18.399 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel nullChannel
2018-04-02 15:34:18.404 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=nullChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=nullChannel]
2018-04-02 15:34:18.433 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel hystrixStreamOutput
2018-04-02 15:34:18.447 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput]
2018-04-02 15:34:18.493 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel errorChannel
2018-04-02 15:34:18.495 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=errorChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=errorChannel]
2018-04-02 15:34:18.544 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageHandler errorLogger
2018-04-02 15:34:18.548 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal': registering with JMX server as MBean [org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal]
2018-04-02 15:34:18.576 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 15:34:19.697 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:34:19.705 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:34:19.705 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:34:19.713 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase -2147482648
2018-04-02 15:34:19.889 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 15:34:19.891 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@79c4580b: startup date [Mon Apr 02 15:34:19 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34fe326d
2018-04-02 15:34:19.942 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:34:19.998 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:34:20.004 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:34:20.005 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:34:20.055 [main] INFO  org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@d431f83: startup date [Mon Apr 02 15:34:20 CST 2018]; root of context hierarchy
2018-04-02 15:34:20.105 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5bc26351: startup date [Mon Apr 02 15:34:20 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34fe326d
2018-04-02 15:34:20.150 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:34:20.490 [main] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 15:34:20.512 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-oa
2018-04-02 15:34:20.519 [main] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: oa instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-04-02 15:34:20.526 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2018-04-02 15:34:20.548 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2018-04-02 15:34:20.566 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-04-02 15:34:20.928 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-04-02 15:34:20.928 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-04-02 15:34:21.092 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-04-02 15:34:21.093 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-04-02 15:34:21.436 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:34:21.496 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-04-02 15:34:21.496 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-04-02 15:34:21.496 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-04-02 15:34:21.497 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-04-02 15:34:21.497 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-04-02 15:34:21.497 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-04-02 15:34:21.497 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-04-02 15:34:21.689 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-04-02 15:34:21.691 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-04-02 15:34:21.694 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-04-02 15:34:21.703 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1522654461697 with initial instances count: 8
2018-04-02 15:34:21.782 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client oa initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:120.76.44.152:8004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6b1e1a07
2018-04-02 15:34:21.783 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 15:34:21.871 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 2.14 seconds (JVM running for 27.172)
2018-04-02 15:34:21.944 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2018-04-02 15:34:22.050 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#16f9bba1:0/SimpleConnection@27e8e698 [delegate=amqp://admin@127.0.0.1:5672/, localPort= 64324]
2018-04-02 15:34:22.098 [main] INFO  org.springframework.integration.channel.DirectChannel - Channel 'user:8001.hystrixStreamOutput' has 1 subscriber(s).
2018-04-02 15:34:22.099 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2018-04-02 15:34:22.100 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application user with eureka with status UP
2018-04-02 15:34:22.100 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1522654462100, current=UP, previous=STARTING]
2018-04-02 15:34:22.102 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001: registering service...
2018-04-02 15:34:22.107 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-02 15:34:22.130 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-02 15:34:22.145 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-02 15:34:22.148 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001 - registration status: 204
2018-04-02 15:34:22.148 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-02 15:34:22.152 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-02 15:34:22.155 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-02 15:34:22.159 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-02 15:34:22.163 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-02 15:34:22.167 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-02 15:34:22.174 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-02 15:34:22.178 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-02 15:34:22.181 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-02 15:34:22.185 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-02 15:34:22.189 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-02 15:34:22.193 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'channelsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=channelsEndpoint]
2018-04-02 15:34:22.194 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2018-04-02 15:34:22.195 [main] INFO  org.springframework.integration.channel.PublishSubscribeChannel - Channel 'user:8001.errorChannel' has 1 subscriber(s).
2018-04-02 15:34:22.195 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2018-04-02 15:34:22.195 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147482647
2018-04-02 15:34:22.195 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2018-04-02 15:34:22.195 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2018-04-02 15:34:22.224 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2018-04-02 15:34:22.271 [main] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2018-04-02 15:34:22.480 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
2018-04-02 15:34:22.510 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2018-04-02 15:34:22.530 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2018-04-02 15:34:22.548 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-04-02 15:34:22.574 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8001 (http)
2018-04-02 15:34:22.576 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8001
2018-04-02 15:34:22.580 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 27.303 seconds (JVM running for 27.881)
2018-04-02 15:34:22.646 [http-nio-8001-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-02 15:34:22.647 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2018-04-02 15:34:22.678 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-04-02 15:35:02.022 [task-scheduler-5] INFO  p6spy - |7|statement|connection3|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:35:02.032 [task-scheduler-5] INFO  p6spy - |7|commit|connection3|
2018-04-02 15:35:04.874 [task-scheduler-9] INFO  p6spy - |7|statement|connection3|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:35:04.882 [task-scheduler-9] INFO  p6spy - |7|commit|connection3|
2018-04-02 15:35:58.968 [task-scheduler-9] INFO  p6spy - |8|statement|connection3|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:35:58.977 [task-scheduler-9] INFO  p6spy - |8|commit|connection3|
2018-04-02 15:37:23.489 [http-nio-8001-exec-2] INFO  p6spy - |8|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 15:37:23.502 [http-nio-8001-exec-2] INFO  p6spy - |8|statement|connection3|select user0_.user_id as user_id1_3_, user0_.created_date as created_2_3_, user0_.last_modified_date as last_mod3_3_, user0_.account_non_expired as account_4_3_, user0_.account_non_locked as account_5_3_, user0_.avatar as avatar6_3_, user0_.credentials_non_expired as credenti7_3_, user0_.email as email8_3_, user0_.enabled as enabled9_3_, user0_.is_certified as is_cert10_3_, user0_.last_login_date as last_lo11_3_, user0_.last_password_reset_date as last_pa12_3_, user0_.mobile as mobile13_3_, user0_.name as name14_3_, user0_.password as passwor15_3_ from fengmangbilu_user user0_ where user0_.mobile='18038008370'
2018-04-02 15:37:23.560 [http-nio-8001-exec-2] INFO  p6spy - |8|statement|connection3|select roles0_.user_user_id as user_use1_6_1_, roles0_.roles_id as roles_id2_6_1_, role1_.id as id1_1_0_, role1_.created_date as created_2_1_0_, role1_.last_modified_date as last_mod3_1_0_, role1_.name as name4_1_0_, role1_.value as value5_1_0_ from fengmangbilu_user_roles roles0_ inner join fengmangbilu_role role1_ on roles0_.roles_id=role1_.id where roles0_.user_user_id='31034003428216832'
2018-04-02 15:37:23.588 [http-nio-8001-exec-2] INFO  p6spy - |9|statement|connection3|select authoritie0_.role_id as role_id1_2_1_, authoritie0_.authorities_id as authorit2_2_1_, authority1_.id as id1_0_0_, authority1_.created_date as created_2_0_0_, authority1_.last_modified_date as last_mod3_0_0_, authority1_.name as name4_0_0_, authority1_.value as value5_0_0_ from fengmangbilu_role_authorities authoritie0_ inner join fengmangbilu_authority authority1_ on authoritie0_.authorities_id=authority1_.id where authoritie0_.role_id=2
2018-04-02 15:37:23.677 [task-scheduler-8] INFO  p6spy - |5|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 15:37:23.690 [task-scheduler-8] INFO  p6spy - |5|statement|connection4|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:37:23.697 [task-scheduler-8] INFO  p6spy - |6|commit|connection4|
2018-04-02 15:37:38.379 [task-scheduler-8] INFO  p6spy - |6|statement|connection4|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:37:38.388 [task-scheduler-8] INFO  p6spy - |6|commit|connection4|
2018-04-02 15:38:38.286 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973: startup date [Mon Apr 02 15:38:38 CST 2018]; root of context hierarchy
2018-04-02 15:38:38.498 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2018-04-02 15:38:38.529 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:38:38.599 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6eb1f671] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:38.779 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:38:38.833 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:38:38.834 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:38:39.128 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 15:38:39.173 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@74abbb: startup date [Mon Apr 02 15:38:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 15:38:40.207 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 15:38:40.503 [main] INFO  org.springframework.integration.config.IntegrationRegistrar - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2018-04-02 15:38:40.600 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-02 15:38:40.640 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointDetailRepository.
2018-04-02 15:38:40.641 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserRepository.
2018-04-02 15:38:40.641 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.RoleRepository.
2018-04-02 15:38:40.643 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fengmangbilu.microservice.user.repositories.UserPointRepository.
2018-04-02 15:38:41.207 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=05455b9c-2899-3ae2-99d6-b41c6fae0260
2018-04-02 15:38:41.248 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2018-04-02 15:38:41.250 [main] INFO  org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2018-04-02 15:38:41.260 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:38:41.312 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.fengmangbilu.microservice.user.clients.OaClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.381 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$1903b1a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.566 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5297f374] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.789 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$eb45bbae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.805 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.809 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2bc59ab7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.824 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$356f7676] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.833 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.840 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$101a5e60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.862 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.879 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9baa2992] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.913 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$901dee36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.941 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:38:41.950 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:38:41.950 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:38:41.961 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$$EnhancerBySpringCGLIB$$52d44b69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.974 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:41.992 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.011 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.018 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration$$EnhancerBySpringCGLIB$$40af8a90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.034 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConfiguration$$EnhancerBySpringCGLIB$$983a7901] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.059 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.072 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$e6921a83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.132 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.170 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.218 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.231 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.286 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$84c499b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.365 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.370 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.468 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6eb1f671] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.488 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration' of type [org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration$$EnhancerBySpringCGLIB$$145f9179] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:42.509 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties' of type [org.springframework.cloud.stream.config.SpringIntegrationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-02 15:38:43.148 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8001 (http)
2018-04-02 15:38:43.161 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-04-02 15:38:43.163 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-04-02 15:38:43.325 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-04-02 15:38:43.325 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4152 ms
2018-04-02 15:38:44.049 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
2018-04-02 15:38:44.050 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-02 15:38:44.050 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-02 15:38:44.050 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-02 15:38:44.050 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2018-04-02 15:38:44.052 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-02 15:38:44.052 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-02 15:38:44.052 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-02 15:38:44.053 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-02 15:38:44.053 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2018-04-02 15:38:44.054 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-02 15:38:44.157 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure - Init DruidDataSource
2018-04-02 15:38:45.692 [main] INFO  p6spy - |16|statement|connection0|SELECT 1 FROM DUAL
2018-04-02 15:38:45.803 [main] INFO  p6spy - |10|statement|connection1|SELECT 1 FROM DUAL
2018-04-02 15:38:45.879 [main] INFO  p6spy - |5|statement|connection2|SELECT 1 FROM DUAL
2018-04-02 15:38:45.943 [main] INFO  p6spy - |4|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 15:38:46.048 [main] INFO  p6spy - |8|statement|connection4|SELECT 1 FROM DUAL
2018-04-02 15:38:46.070 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-04-02 15:38:46.493 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-02 15:38:46.516 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-04-02 15:38:46.605 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.0.12.Final}
2018-04-02 15:38:46.607 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2018-04-02 15:38:46.610 [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2018-04-02 15:38:46.667 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-02 15:38:46.928 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-02 15:38:47.770 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
2018-04-02 15:38:49.013 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-02 15:38:50.055 [main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
2018-04-02 15:38:50.941 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@33bd3549: startup date [Mon Apr 02 15:38:50 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@74abbb
2018-04-02 15:38:50.963 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:38:51.343 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:38:51.352 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:38:51.353 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:38:51.406 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:38:51.416 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:38:51.416 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:38:52.366 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.ErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-02 15:38:52.367 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/point/getUserPointDetails],methods=[GET]}" onto public org.springframework.data.jpa.datatables.mapping.DataTablesOutput<com.fengmangbilu.microservice.user.entities.UserPointDetail> com.fengmangbilu.microservice.user.controllers.PointController.getUserPointDetails(java.lang.String,java.util.Date,java.util.Date,org.springframework.data.jpa.datatables.mapping.DataTablesInput)
2018-04-02 15:38:52.368 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_login_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendLoginSms(java.lang.String)
2018-04-02 15:38:52.368 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_register_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendRegisterSms(java.lang.String)
2018-04-02 15:38:52.369 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/send_resetPassword_sms],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.SmsController.sendResetPasswordSms(java.lang.String)
2018-04-02 15:38:52.369 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.getToken(com.fengmangbilu.microservice.user.endpoints.TokenRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 15:38:52.369 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/smsLogin],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.smsLogin(com.fengmangbilu.microservice.user.endpoints.LoginRequest,javax.servlet.http.HttpServletRequest)
2018-04-02 15:38:52.370 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/refreshToken],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.TokenController.refreshToken(java.lang.String)
2018-04-02 15:38:52.372 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/register],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.register(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 15:38:52.372 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserInfo],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserInfo(java.lang.String)
2018-04-02 15:38:52.372 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/deleteAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.deleteAvatar(java.lang.String) throws com.qiniu.common.QiniuException
2018-04-02 15:38:52.372 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resetPassword],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.resetPassword(com.fengmangbilu.microservice.user.endpoints.UserRequest)
2018-04-02 15:38:52.373 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/uploadAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.uploadAvatar(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.qiniu.common.QiniuException
2018-04-02 15:38:52.373 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/updateAvatar],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.updateAvatar(java.lang.String,java.lang.String)
2018-04-02 15:38:52.373 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUpToken],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUpToken(java.lang.String)
2018-04-02 15:38:52.373 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/certifiedIdCard],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.certifiedIdCard(java.lang.String,java.lang.String,com.fengmangbilu.microservice.user.endpoints.IdCardRequest) throws java.lang.Exception
2018-04-02 15:38:52.374 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/findByMobile],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.findByMobile(java.lang.String)
2018-04-02 15:38:52.374 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserHrRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserHrRole(java.lang.String)
2018-04-02 15:38:52.374 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/grantUserEmpRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.grantUserEmpRole(java.lang.String)
2018-04-02 15:38:52.374 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resetUserRole],methods=[POST]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.resetUserRole(java.lang.String)
2018-04-02 15:38:52.375 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUserPermission],methods=[GET]}" onto public com.fengmangbilu.web.Response com.fengmangbilu.microservice.user.controllers.UserController.getUserPermission(java.lang.String)
2018-04-02 15:38:52.378 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-02 15:38:52.379 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-02 15:38:52.380 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-02 15:38:52.525 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 15:38:52.534 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2b4b3918
2018-04-02 15:38:54.449 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/health || /actuator/health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-02 15:38:54.450 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-02 15:38:54.450 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-02 15:38:54.451 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/autoconfig || /actuator/autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.451 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/info || /actuator/info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.452 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/archaius || /actuator/archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.452 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/refresh || /actuator/refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-02 15:38:54.453 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-02 15:38:54.454 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env || /actuator/env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.455 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/auditevents || /actuator/auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-02 15:38:54.456 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-02 15:38:54.457 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 15:38:54.457 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/loggers || /actuator/loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.458 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/features || /actuator/features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.458 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-02 15:38:54.459 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/metrics || /actuator/metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.460 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/mappings || /actuator/mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.460 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-02 15:38:54.461 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/dump || /actuator/dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.461 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/channels || /actuator/channels.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.462 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-02 15:38:54.462 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-02 15:38:54.462 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/trace || /actuator/trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.463 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/configprops || /actuator/configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.464 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/heapdump || /actuator/heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-02 15:38:54.464 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator/beans || /actuator/beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-02 15:38:54.895 [main] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-04-02 15:38:55.278 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-02 15:38:55.356 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:38:55.365 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:38:55.365 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:38:55.539 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@74abbb: startup date [Mon Apr 02 15:38:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
2018-04-02 15:38:55.549 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Detected ResponseBodyAdvice bean in jsonFilterResponseBodyAdvice
2018-04-02 15:38:55.754 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 15:38:55.755 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 15:38:55.815 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in errorController
2018-04-02 15:38:55.815 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected ResponseBodyAdvice implementation in jsonFilterResponseBodyAdvice
2018-04-02 15:38:55.816 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in defaultExceptionHandler
2018-04-02 15:38:55.899 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-02 15:38:56.474 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/resetPassword'], Ant [pattern='/register'], Ant [pattern='/smsLogin'], Ant [pattern='/getToken'], Ant [pattern='/refreshToken'], Ant [pattern='/send_**_sms'], Ant [pattern='/findByMobile'], Ant [pattern='/error']]], []
2018-04-02 15:38:56.474 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 15:38:56.474 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs/**'], []
2018-04-02 15:38:56.475 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2018-04-02 15:38:56.475 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2018-04-02 15:38:56.475 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2018-04-02 15:38:56.475 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/actuator/**'], []
2018-04-02 15:38:56.475 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/druid/**'], []
2018-04-02 15:38:56.475 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/resetPassword'], []
2018-04-02 15:38:56.475 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/register'], []
2018-04-02 15:38:56.476 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/smsLogin'], []
2018-04-02 15:38:56.476 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/getToken'], []
2018-04-02 15:38:56.476 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/refreshToken'], []
2018-04-02 15:38:56.476 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/send_**_sms'], []
2018-04-02 15:38:56.476 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/findByMobile'], []
2018-04-02 15:38:56.614 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@46a9af36, org.springframework.security.web.context.SecurityContextPersistenceFilter@57d8d5ed, org.springframework.security.web.header.HeaderWriterFilter@2655ad3b, org.springframework.security.web.authentication.logout.LogoutFilter@4670caf6, com.fengmangbilu.security.authentication.TokenAuthenticationProcessingFilter@548051d7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@be73bbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3212ff1b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d1b97e4, org.springframework.security.web.session.SessionManagementFilter@ba1f5d1, org.springframework.security.web.access.ExceptionTranslationFilter@1fd0f9dd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79cc08fb]
2018-04-02 15:38:56.621 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7190b5ce, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b05371a, org.springframework.security.web.header.HeaderWriterFilter@627b0e71, org.springframework.security.web.authentication.logout.LogoutFilter@2564b7f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15a1911e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f931d5d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1231e446, org.springframework.security.web.session.SessionManagementFilter@63ad2a0f, org.springframework.security.web.access.ExceptionTranslationFilter@3810d15d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@9fec3a3]
2018-04-02 15:38:56.646 [main] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@72efba55, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@307f6602, org.springframework.security.web.context.SecurityContextPersistenceFilter@35fe64ca, org.springframework.security.web.header.HeaderWriterFilter@13dabbb9, org.springframework.security.web.csrf.CsrfFilter@65af4162, org.springframework.security.web.authentication.logout.LogoutFilter@34f14035, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74d6d08a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3217aada, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f314bad, org.springframework.security.web.session.SessionManagementFilter@2a4594b1, org.springframework.security.web.access.ExceptionTranslationFilter@46b0fb24]
2018-04-02 15:38:57.177 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService  'taskScheduler'
2018-04-02 15:38:57.999 [main] INFO  org.springframework.integration.codec.kryo.CompositeKryoRegistrar - configured Kryo registration [40, java.io.File] with serializer org.springframework.integration.codec.kryo.FileSerializer
2018-04-02 15:38:58.510 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 15:38:58.512 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
2018-04-02 15:38:58.512 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-02 15:38:58.519 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-02 15:38:58.521 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2018-04-02 15:38:58.522 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'integrationMbeanExporter' has been autodetected for JMX exposure
2018-04-02 15:38:58.523 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-02 15:38:58.523 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-02 15:38:58.524 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-02 15:38:58.525 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-02 15:38:58.529 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-02 15:38:58.542 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-02 15:38:58.549 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-02 15:38:58.566 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'integrationMbeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=integrationMbeanExporter,type=IntegrationMBeanExporter]
2018-04-02 15:38:58.592 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=74abbb,type=ConfigurationPropertiesRebinder]
2018-04-02 15:38:58.595 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
2018-04-02 15:38:58.598 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2018-04-02 15:38:58.606 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-02 15:38:58.612 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2018-04-02 15:38:58.620 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 15:38:58.620 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel nullChannel
2018-04-02 15:38:58.624 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=nullChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=nullChannel]
2018-04-02 15:38:58.633 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel hystrixStreamOutput
2018-04-02 15:38:58.636 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=hystrixStreamOutput]
2018-04-02 15:38:58.679 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageChannel errorChannel
2018-04-02 15:38:58.682 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageChannel,name=errorChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=errorChannel]
2018-04-02 15:38:58.729 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Registering MessageHandler errorLogger
2018-04-02 15:38:58.731 [main] INFO  org.springframework.integration.monitor.IntegrationMBeanExporter - Located managed bean 'org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal': registering with JMX server as MBean [org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal]
2018-04-02 15:38:58.749 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup
2018-04-02 15:38:59.858 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:38:59.864 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:38:59.864 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:38:59.873 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase -2147482648
2018-04-02 15:39:00.037 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - No active profile set, falling back to default profiles: default
2018-04-02 15:39:00.041 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68a45b0f: startup date [Mon Apr 02 15:39:00 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@74abbb
2018-04-02 15:39:00.085 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:39:00.142 [main] INFO  org.hibernate.validator.internal.xml.ValidationXmlParser - HV000007: META-INF/validation.xml found. Parsing XML based configuration.
2018-04-02 15:39:00.149 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000004: Using com.fengmangbilu.validator.i18n.ValidationMessageInterpolator as message interpolator.
2018-04-02 15:39:00.149 [main] INFO  org.hibernate.validator.internal.xml.ValidationBootstrapParameters - HV000119: Using com.fengmangbilu.validator.provider.ReportOnParameterNameProvider as parameter name provider.
2018-04-02 15:39:00.204 [main] INFO  org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@532fc97b: startup date [Mon Apr 02 15:39:00 CST 2018]; root of context hierarchy
2018-04-02 15:39:00.254 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12d0699d: startup date [Mon Apr 02 15:39:00 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@74abbb
2018-04-02 15:39:00.300 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-02 15:39:00.617 [main] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 15:39:00.637 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-oa
2018-04-02 15:39:00.644 [main] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: oa instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-04-02 15:39:00.651 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2018-04-02 15:39:00.668 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2018-04-02 15:39:00.685 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-04-02 15:39:00.915 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-04-02 15:39:00.915 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-04-02 15:39:01.042 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-04-02 15:39:01.042 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-04-02 15:39:01.356 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:39:01.419 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-04-02 15:39:01.419 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-04-02 15:39:01.419 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-04-02 15:39:01.420 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-04-02 15:39:01.420 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-04-02 15:39:01.420 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-04-02 15:39:01.421 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-04-02 15:39:01.611 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-04-02 15:39:01.613 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-04-02 15:39:01.615 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-04-02 15:39:01.618 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1522654741617 with initial instances count: 7
2018-04-02 15:39:01.661 [main] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client oa initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=oa,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:120.76.44.152:8004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1914bfa1
2018-04-02 15:39:01.662 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: oa.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-04-02 15:39:01.720 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 1.83 seconds (JVM running for 24.439)
2018-04-02 15:39:01.775 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2018-04-02 15:39:01.824 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#6726245e:0/SimpleConnection@53b32895 [delegate=amqp://admin@127.0.0.1:5672/, localPort= 64866]
2018-04-02 15:39:01.886 [main] INFO  org.springframework.integration.channel.DirectChannel - Channel 'user:8001.hystrixStreamOutput' has 1 subscriber(s).
2018-04-02 15:39:01.888 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2018-04-02 15:39:01.888 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application user with eureka with status UP
2018-04-02 15:39:01.889 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1522654741888, current=UP, previous=STARTING]
2018-04-02 15:39:01.895 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-02 15:39:01.896 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001: registering service...
2018-04-02 15:39:01.910 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-02 15:39:01.920 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-02 15:39:01.922 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-02 15:39:01.926 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-02 15:39:01.929 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-02 15:39:01.933 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-02 15:39:01.933 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_USER/Zx-PC:user:8001 - registration status: 204
2018-04-02 15:39:01.936 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-02 15:39:01.939 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-02 15:39:01.948 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-02 15:39:01.951 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-02 15:39:01.953 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-02 15:39:01.955 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-02 15:39:01.958 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-02 15:39:01.960 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'channelsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=channelsEndpoint]
2018-04-02 15:39:01.961 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2018-04-02 15:39:01.961 [main] INFO  org.springframework.integration.channel.PublishSubscribeChannel - Channel 'user:8001.errorChannel' has 1 subscriber(s).
2018-04-02 15:39:01.961 [main] INFO  org.springframework.integration.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2018-04-02 15:39:01.961 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147482647
2018-04-02 15:39:01.961 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2018-04-02 15:39:01.961 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2018-04-02 15:39:01.979 [main] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2018-04-02 15:39:02.011 [main] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2018-04-02 15:39:02.211 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
2018-04-02 15:39:02.237 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8001"]
2018-04-02 15:39:02.249 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8001"]
2018-04-02 15:39:02.261 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-04-02 15:39:02.284 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8001 (http)
2018-04-02 15:39:02.285 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8001
2018-04-02 15:39:02.289 [main] INFO  com.fengmangbilu.microservice.user.UserApplication - Started UserApplication in 24.585 seconds (JVM running for 25.007)
2018-04-02 15:39:09.020 [http-nio-8001-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-02 15:39:09.020 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2018-04-02 15:39:09.044 [http-nio-8001-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2018-04-02 15:39:09.211 [task-scheduler-2] INFO  p6spy - |13|statement|connection3|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:39:09.218 [task-scheduler-2] INFO  p6spy - |4|commit|connection3|
2018-04-02 15:39:09.241 [http-nio-8001-exec-1] INFO  p6spy - |13|statement|connection4|select user0_.user_id as user_id1_3_0_, user0_.created_date as created_2_3_0_, user0_.last_modified_date as last_mod3_3_0_, user0_.account_non_expired as account_4_3_0_, user0_.account_non_locked as account_5_3_0_, user0_.avatar as avatar6_3_0_, user0_.credentials_non_expired as credenti7_3_0_, user0_.email as email8_3_0_, user0_.enabled as enabled9_3_0_, user0_.is_certified as is_cert10_3_0_, user0_.last_login_date as last_lo11_3_0_, user0_.last_password_reset_date as last_pa12_3_0_, user0_.mobile as mobile13_3_0_, user0_.name as name14_3_0_, user0_.password as passwor15_3_0_, roles1_.user_user_id as user_use1_6_1_, role2_.id as roles_id2_6_1_, role2_.id as id1_1_2_, role2_.created_date as created_2_1_2_, role2_.last_modified_date as last_mod3_1_2_, role2_.name as name4_1_2_, role2_.value as value5_1_2_, authoritie3_.role_id as role_id1_2_3_, authority4_.id as authorit2_2_3_, authority4_.id as id1_0_4_, authority4_.created_date as created_2_0_4_, authority4_.last_modified_date as last_mod3_0_4_, authority4_.name as name4_0_4_, authority4_.value as value5_0_4_ from fengmangbilu_user user0_ left outer join fengmangbilu_user_roles roles1_ on user0_.user_id=roles1_.user_user_id left outer join fengmangbilu_role role2_ on roles1_.roles_id=role2_.id left outer join fengmangbilu_role_authorities authoritie3_ on role2_.id=authoritie3_.role_id left outer join fengmangbilu_authority authority4_ on authoritie3_.authorities_id=authority4_.id where user0_.user_id='31034003428216832'
2018-04-02 15:39:09.280 [http-nio-8001-exec-1] INFO  p6spy - |8|commit|connection4|
2018-04-02 15:39:09.345 [http-nio-8001-exec-1] INFO  p6spy - |8|commit|connection4|
2018-04-02 15:39:32.714 [task-scheduler-10] INFO  p6spy - |9|statement|connection4|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:39:32.723 [task-scheduler-10] INFO  p6spy - |8|commit|connection4|
2018-04-02 15:39:35.270 [http-nio-8001-exec-2] INFO  p6spy - |13|statement|connection4|select user0_.user_id as user_id1_3_0_, user0_.created_date as created_2_3_0_, user0_.last_modified_date as last_mod3_3_0_, user0_.account_non_expired as account_4_3_0_, user0_.account_non_locked as account_5_3_0_, user0_.avatar as avatar6_3_0_, user0_.credentials_non_expired as credenti7_3_0_, user0_.email as email8_3_0_, user0_.enabled as enabled9_3_0_, user0_.is_certified as is_cert10_3_0_, user0_.last_login_date as last_lo11_3_0_, user0_.last_password_reset_date as last_pa12_3_0_, user0_.mobile as mobile13_3_0_, user0_.name as name14_3_0_, user0_.password as passwor15_3_0_, roles1_.user_user_id as user_use1_6_1_, role2_.id as roles_id2_6_1_, role2_.id as id1_1_2_, role2_.created_date as created_2_1_2_, role2_.last_modified_date as last_mod3_1_2_, role2_.name as name4_1_2_, role2_.value as value5_1_2_, authoritie3_.role_id as role_id1_2_3_, authority4_.id as authorit2_2_3_, authority4_.id as id1_0_4_, authority4_.created_date as created_2_0_4_, authority4_.last_modified_date as last_mod3_0_4_, authority4_.name as name4_0_4_, authority4_.value as value5_0_4_ from fengmangbilu_user user0_ left outer join fengmangbilu_user_roles roles1_ on user0_.user_id=roles1_.user_user_id left outer join fengmangbilu_role role2_ on roles1_.roles_id=role2_.id left outer join fengmangbilu_role_authorities authoritie3_ on role2_.id=authoritie3_.role_id left outer join fengmangbilu_authority authority4_ on authoritie3_.authorities_id=authority4_.id where user0_.user_id='31034003428216832'
2018-04-02 15:39:35.306 [http-nio-8001-exec-2] INFO  p6spy - |9|commit|connection4|
2018-04-02 15:39:40.801 [http-nio-8001-exec-2] INFO  p6spy - |8|commit|connection4|
2018-04-02 15:40:11.198 [http-nio-8001-exec-3] INFO  p6spy - |5|statement|connection3|SELECT 1 FROM DUAL
2018-04-02 15:40:11.213 [task-scheduler-8] INFO  p6spy - |9|statement|connection4|update fengmangbilu_user set last_login_date=now() where user_id='31034003428216832'
2018-04-02 15:40:11.219 [http-nio-8001-exec-3] INFO  p6spy - |8|statement|connection3|select user0_.user_id as user_id1_3_0_, user0_.created_date as created_2_3_0_, user0_.last_modified_date as last_mod3_3_0_, user0_.account_non_expired as account_4_3_0_, user0_.account_non_locked as account_5_3_0_, user0_.avatar as avatar6_3_0_, user0_.credentials_non_expired as credenti7_3_0_, user0_.email as email8_3_0_, user0_.enabled as enabled9_3_0_, user0_.is_certified as is_cert10_3_0_, user0_.last_login_date as last_lo11_3_0_, user0_.last_password_reset_date as last_pa12_3_0_, user0_.mobile as mobile13_3_0_, user0_.name as name14_3_0_, user0_.password as passwor15_3_0_, roles1_.user_user_id as user_use1_6_1_, role2_.id as roles_id2_6_1_, role2_.id as id1_1_2_, role2_.created_date as created_2_1_2_, role2_.last_modified_date as last_mod3_1_2_, role2_.name as name4_1_2_, role2_.value as value5_1_2_, authoritie3_.role_id as role_id1_2_3_, authority4_.id as authorit2_2_3_, authority4_.id as id1_0_4_, authority4_.created_date as created_2_0_4_, authority4_.last_modified_date as last_mod3_0_4_, authority4_.name as name4_0_4_, authority4_.value as value5_0_4_ from fengmangbilu_user user0_ left outer join fengmangbilu_user_roles roles1_ on user0_.user_id=roles1_.user_user_id left outer join fengmangbilu_role role2_ on roles1_.roles_id=role2_.id left outer join fengmangbilu_role_authorities authoritie3_ on role2_.id=authoritie3_.role_id left outer join fengmangbilu_authority authority4_ on authoritie3_.authorities_id=authority4_.id where user0_.user_id='31034003428216832'
2018-04-02 15:40:11.223 [task-scheduler-8] INFO  p6spy - |9|commit|connection4|
2018-04-02 15:40:11.227 [http-nio-8001-exec-3] INFO  p6spy - |4|commit|connection3|
2018-04-02 15:40:11.342 [http-nio-8001-exec-3] INFO  p6spy - |5|statement|connection3|update fengmangbilu_user set created_date='27-三月-18', last_modified_date='02-四月-18', account_non_expired=true, account_non_locked=true, avatar='684ebce4183c4a5199aa0b6b86343a1d.png', credentials_non_expired=true, email=NULL, enabled=true, is_certified=true, last_login_date='02-四月-18', last_password_reset_date='31-三月-18', mobile='18038008370', name='林仁华', password='$2a$10$cgpktoGZPeQHyPPggMXygujnIX8IDeHdZSD1s4iNsxRQtsDz8Ajjy' where user_id='31034003428216832'
2018-04-02 15:40:11.351 [http-nio-8001-exec-3] INFO  p6spy - |5|statement|connection3|delete from fengmangbilu_user_roles where user_user_id='31034003428216832'
2018-04-02 15:40:11.357 [http-nio-8001-exec-3] INFO  p6spy - |4|commit|connection3|
2018-04-02 15:44:01.427 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:49:01.432 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-04-02 15:54:01.438 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
