package com.fengmangbilu.security.token;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;

import com.fengmangbilu.security.AccessToken;
import com.fengmangbilu.security.DefaultAccessToken;

/**
 * 默认访问令牌转换器
 * @author Justice
 */
public class DefaultAccessTokenConverter implements AccessTokenConverter {

	private AuthenticationConverter userTokenConverter = new DefaultAuthenticationConverter();

	public void setUserTokenConverter(AuthenticationConverter userTokenConverter) {
		this.userTokenConverter = userTokenConverter;
	}

	public Map<String, ?> convertAccessToken(AccessToken token, Authentication authentication) {
		Map<String, Object> response = new HashMap<String, Object>();

		response.putAll(userTokenConverter.convertAuthentication(authentication));
		
		if (token.getAdditionalInformation().containsKey(ISS)) {
			response.put(ISS, token.getAdditionalInformation().get(ISS));
		}

		if (token.getAdditionalInformation().containsKey(JTI)) {
			response.put(JTI, token.getAdditionalInformation().get(JTI));
		}

		if (token.getExpiration() != null) {
			response.put(EXP, token.getExpiration().getTime() / 1000);
		}
		
		response.putAll(token.getAdditionalInformation());

		return response;
	}

	public AccessToken extractAccessToken(String value, Map<String, ?> map) {
		DefaultAccessToken token = new DefaultAccessToken(value);
		Map<String, Object> info = new HashMap<String, Object>(map);
		info.remove(EXP);
		info.remove(AUD);
		if (map.containsKey(EXP)) {
			token.setExpiration(new Date((Long) map.get(EXP) * 1000L));
		}
		if (map.containsKey(JTI)) {
			info.put(JTI, map.get(JTI));
		}
		if (map.containsKey(ISS)) {
			info.put(ISS, map.get(ISS));
		}
		token.setAdditionalInformation(info);
		return token;
	}

	public UsernamePasswordAuthenticationToken extractAuthentication(Map<String, ?> map) {
		return userTokenConverter.extractAuthentication(map);
	}

}
